#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ Ozon API.
"""

import os
import sys
import json
import requests
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(__file__)))

try:
    import config
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

def debug_v4_api():
    """–û—Ç–ª–∞–¥–∫–∞ v4 API –æ—Ç–≤–µ—Ç–∞."""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ v4 API –æ—Ç–≤–µ—Ç–∞...")
    
    url = f"{config.OZON_API_BASE_URL}/v4/product/info/stocks"
    headers = {
        "Client-Id": config.OZON_CLIENT_ID,
        "Api-Key": config.OZON_API_KEY,
        "Content-Type": "application/json"
    }
    
    payload = {
        "limit": 5,
        "filter": {
            "visibility": "ALL"
        }
    }
    
    try:
        response = requests.post(url, json=payload, headers=headers, timeout=30)
        
        print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def debug_v3_api():
    """–û—Ç–ª–∞–¥–∫–∞ v3 API –æ—Ç–≤–µ—Ç–∞."""
    print("\nüîç –û—Ç–ª–∞–¥–∫–∞ v3 API –æ—Ç–≤–µ—Ç–∞...")
    
    url = f"{config.OZON_API_BASE_URL}/v3/product/info/stocks"
    headers = {
        "Client-Id": config.OZON_CLIENT_ID,
        "Api-Key": config.OZON_API_KEY,
        "Content-Type": "application/json"
    }
    
    payload = {
        "filter": {
            "visibility": "ALL"
        },
        "limit": 5
    }
    
    try:
        response = requests.post(url, json=payload, headers=headers, timeout=30)
        
        print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def debug_analytics_api():
    """–û—Ç–ª–∞–¥–∫–∞ Analytics API –æ—Ç–≤–µ—Ç–∞."""
    print("\nüîç –û—Ç–ª–∞–¥–∫–∞ Analytics API –æ—Ç–≤–µ—Ç–∞...")
    
    url = f"{config.OZON_API_BASE_URL}/v2/analytics/stock_on_warehouses"
    headers = {
        "Client-Id": config.OZON_CLIENT_ID,
        "Api-Key": config.OZON_API_KEY,
        "Content-Type": "application/json"
    }
    
    from datetime import date
    today = date.today().isoformat()
    
    payload = {
        "date_from": today,
        "date_to": today,
        "limit": 5,
        "offset": 0,
        "metrics": [
            "free_to_sell_amount",
            "promised_amount", 
            "reserved_amount"
        ],
        "dimensions": [
            "sku",
            "warehouse"
        ]
    }
    
    try:
        response = requests.post(url, json=payload, headers=headers, timeout=30)
        
        print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def debug_warehouse_api():
    """–û—Ç–ª–∞–¥–∫–∞ Warehouse API –æ—Ç–≤–µ—Ç–∞."""
    print("\nüîç –û—Ç–ª–∞–¥–∫–∞ Warehouse API –æ—Ç–≤–µ—Ç–∞...")
    
    url = f"{config.OZON_API_BASE_URL}/v1/warehouse/list"
    headers = {
        "Client-Id": config.OZON_CLIENT_ID,
        "Api-Key": config.OZON_API_KEY,
        "Content-Type": "application/json"
    }
    
    try:
        response = requests.post(url, json={}, headers=headers, timeout=30)
        
        print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –û—Ç–ª–∞–¥–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ Ozon API")
    print("=" * 50)
    
    debug_v4_api()
    debug_v3_api()
    debug_analytics_api()
    debug_warehouse_api()