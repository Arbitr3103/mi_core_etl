#!/bin/bash

# ===================================================================
# PRE-DEPLOYMENT READINESS CHECK
# ===================================================================
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –∞–∫—Ç–∏–≤–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é Ozon Active Product Filtering${NC}"
echo "=================================================================="

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
check_passed() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

check_failed() {
    echo -e "${RED}‚ùå $1${NC}"
}

check_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

# –°—á–µ—Ç—á–∏–∫–∏
PASSED=0
FAILED=0
WARNINGS=0

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP
echo -e "\n${BLUE}1. –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP${NC}"
if command -v php &> /dev/null; then
    PHP_VERSION=$(php -v | head -n1 | cut -d' ' -f2)
    check_passed "PHP —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $PHP_VERSION)"
    ((PASSED++))
else
    check_failed "PHP –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((FAILED++))
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
echo -e "\n${BLUE}2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL${NC}"
if command -v mysql &> /dev/null; then
    MYSQL_VERSION=$(mysql --version | cut -d' ' -f3)
    check_passed "MySQL –∫–ª–∏–µ–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–µ—Ä—Å–∏—è: $MYSQL_VERSION)"
    ((PASSED++))
else
    check_failed "MySQL –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((FAILED++))
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo -e "\n${BLUE}3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö${NC}"
if [[ -f "config.php" ]]; then
    if php -r "
        require_once 'config.php';
        try {
            \$pdo = getDatabaseConnection();
            echo 'OK';
        } catch (Exception \$e) {
            echo 'FAIL: ' . \$e->getMessage();
            exit(1);
        }
    " > /dev/null 2>&1; then
        check_passed "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç"
        ((PASSED++))
    else
        check_failed "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        ((FAILED++))
    fi
else
    check_failed "–§–∞–π–ª config.php –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((FAILED++))
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏
echo -e "\n${BLUE}4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏${NC}"
MIGRATION_FILES=(
    "migrations/add_product_activity_tracking.sql"
    "migrations/rollback_product_activity_tracking.sql"
    "migrations/validate_product_activity_tracking.sql"
)

for file in "${MIGRATION_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        check_passed "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: $file"
        ((PASSED++))
    else
        check_failed "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: $file"
        ((FAILED++))
    fi
done

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
echo -e "\n${BLUE}5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è${NC}"
if [[ -f "deploy_active_product_filtering.sh" ]]; then
    if [[ -x "deploy_active_product_filtering.sh" ]]; then
        check_passed "–°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é"
        ((PASSED++))
    else
        check_warning "–°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: chmod +x deploy_active_product_filtering.sh)"
        ((WARNINGS++))
    fi
else
    check_failed "–°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ((FAILED++))
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "\n${BLUE}6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö${NC}"
if php -r "
    require_once 'config.php';
    try {
        \$pdo = getDatabaseConnection();
        \$stmt = \$pdo->query('SELECT COUNT(*) FROM dim_products WHERE sku_ozon IS NOT NULL');
        \$count = \$stmt->fetchColumn();
        echo \$count;
    } catch (Exception \$e) {
        echo 'ERROR';
        exit(1);
    }
" > /dev/null 2>&1; then
    PRODUCT_COUNT=$(php -r "
        require_once 'config.php';
        \$pdo = getDatabaseConnection();
        \$stmt = \$pdo->query('SELECT COUNT(*) FROM dim_products WHERE sku_ozon IS NOT NULL');
        echo \$stmt->fetchColumn();
    ")
    check_passed "–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–æ $PRODUCT_COUNT –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å Ozon SKU"
    ((PASSED++))
else
    check_failed "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    ((FAILED++))
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—è is_active (–Ω–µ –¥–æ–ª–∂–Ω–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –¥–æ –º–∏–≥—Ä–∞—Ü–∏–∏)
echo -e "\n${BLUE}7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏${NC}"
if php -r "
    require_once 'config.php';
    try {
        \$pdo = getDatabaseConnection();
        \$stmt = \$pdo->query('DESCRIBE dim_products');
        \$columns = \$stmt->fetchAll(PDO::FETCH_COLUMN);
        if (in_array('is_active', \$columns)) {
            echo 'EXISTS';
        } else {
            echo 'NOT_EXISTS';
        }
    } catch (Exception \$e) {
        echo 'ERROR';
        exit(1);
    }
" > /dev/null 2>&1; then
    MIGRATION_STATUS=$(php -r "
        require_once 'config.php';
        \$pdo = getDatabaseConnection();
        \$stmt = \$pdo->query('DESCRIBE dim_products');
        \$columns = \$stmt->fetchAll(PDO::FETCH_COLUMN);
        echo in_array('is_active', \$columns) ? 'EXISTS' : 'NOT_EXISTS';
    ")
    
    if [[ "$MIGRATION_STATUS" == "NOT_EXISTS" ]]; then
        check_passed "–ú–∏–≥—Ä–∞—Ü–∏—è –µ—â–µ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (–ø–æ–ª–µ is_active –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)"
        ((PASSED++))
    else
        check_warning "–ú–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (–ø–æ–ª–µ is_active —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"
        ((WARNINGS++))
    fi
else
    check_failed "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã dim_products"
    ((FAILED++))
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
echo -e "\n${BLUE}8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ${NC}"
AVAILABLE_SPACE=$(df . | tail -1 | awk '{print $4}')
AVAILABLE_MB=$((AVAILABLE_SPACE / 1024))

if [[ $AVAILABLE_MB -gt 1000 ]]; then
    check_passed "–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${AVAILABLE_MB}MB (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)"
    ((PASSED++))
elif [[ $AVAILABLE_MB -gt 500 ]]; then
    check_warning "–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${AVAILABLE_MB}MB (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)"
    ((WARNINGS++))
else
    check_failed "–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${AVAILABLE_MB}MB (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 500MB)"
    ((FAILED++))
fi

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
echo -e "\n${BLUE}9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞${NC}"
if [[ -w "." ]]; then
    check_passed "–ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å—Ç—å"
    ((PASSED++))
else
    check_failed "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
    ((FAILED++))
fi

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤ –∏ –±—ç–∫–∞–ø–æ–≤
echo -e "\n${BLUE}10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π${NC}"
mkdir -p logs backups
if [[ -d "logs" && -d "backups" ]]; then
    check_passed "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs –∏ backups —Å–æ–∑–¥–∞–Ω—ã"
    ((PASSED++))
else
    check_failed "–ù–µ —É–¥–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
    ((FAILED++))
fi

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\n${BLUE}=================================================================="
echo -e "–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ì–û–¢–û–í–ù–û–°–¢–ò –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ${NC}"
echo "=================================================================="

echo -e "‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${GREEN}$PASSED${NC}"
echo -e "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${YELLOW}$WARNINGS${NC}"
echo -e "‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${RED}$FAILED${NC}"

if [[ $FAILED -eq 0 ]]; then
    echo -e "\n${GREEN}üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ!${NC}"
    echo -e "\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo -e "1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: ${BLUE}mysqldump mi_core_db > backup_\$(date +%Y%m%d_%H%M%S).sql${NC}"
    echo -e "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ dry run: ${BLUE}./deploy_active_product_filtering.sh --dry-run${NC}"
    echo -e "3. –ï—Å–ª–∏ –≤—Å–µ –û–ö, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: ${BLUE}./deploy_active_product_filtering.sh${NC}"
    exit 0
elif [[ $FAILED -le 2 && $WARNINGS -le 3 ]]; then
    echo -e "\n${YELLOW}‚ö†Ô∏è –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ –° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø–ú–ò${NC}"
    echo -e "\n–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É"
    exit 1
else
    echo -e "\n${RED}‚ùå –°–ò–°–¢–ï–ú–ê –ù–ï –ì–û–¢–û–í–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ${NC}"
    echo -e "\n–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É"
    exit 2
fi