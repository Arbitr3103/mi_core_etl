#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API endpoints —á–µ—Ä–µ–∑ curl

echo "üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints..."
echo "================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –ë–∞–∑–æ–≤—ã–π URL (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
BASE_URL="http://localhost:8080"

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
test_api() {
    local endpoint="$1"
    local name="$2"
    
    echo -n "–¢–µ—Å—Ç–∏—Ä—É–µ–º $name... "
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –∏–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è
    local start_time=$(date +%s.%N)
    local response=$(curl -s -w "%{http_code}" -H "Accept: application/json" "$BASE_URL/api/$endpoint")
    local end_time=$(date +%s.%N)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP –∫–æ–¥ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–∏–º–≤–æ–ª–∞)
    local http_code="${response: -3}"
    local json_response="${response%???}"
    
    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞
    local response_time=$(echo "($end_time - $start_time) * 1000" | bc)
    
    if [ "$http_code" = "200" ]; then
        echo -e "${GREEN}‚úì OK${NC} (${response_time%.*}ms)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç JSON
        if echo "$json_response" | jq . > /dev/null 2>&1; then
            echo "  JSON –≤–∞–ª–∏–¥–µ–Ω"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ—Ç–≤–µ—Ç–∞
            if echo "$json_response" | jq -e '.status' > /dev/null 2>&1; then
                local status=$(echo "$json_response" | jq -r '.status')
                echo "  –°—Ç–∞—Ç—É—Å: $status"
            fi
            
            if echo "$json_response" | jq -e '.total_products' > /dev/null 2>&1; then
                local total=$(echo "$json_response" | jq -r '.total_products')
                echo "  –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: $total"
            fi
        else
            echo -e "  ${YELLOW}‚ö† –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON${NC}"
        fi
    else
        echo -e "${RED}‚úó FAIL${NC} (HTTP $http_code, ${response_time%.*}ms)"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        if echo "$json_response" | jq -e '.message' > /dev/null 2>&1; then
            local error_msg=$(echo "$json_response" | jq -r '.message')
            echo "  –û—à–∏–±–∫–∞: $error_msg"
        fi
    fi
    
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å jq –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
if ! command -v jq &> /dev/null; then
    echo -e "${YELLOW}‚ö† jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, JSON –ø–∞—Ä—Å–∏–Ω–≥ –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω${NC}"
    echo ""
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ API endpoints
test_api "sync-stats.php" "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
test_api "analytics.php" "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤"
test_api "fix-product-names.php" "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤"
test_api "debug.php" "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"

echo "================================"
echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo ""
echo "üöÄ –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (10 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ sync-stats)..."

total_time=0
successful_requests=0

for i in {1..10}; do
    start_time=$(date +%s.%N)
    response=$(curl -s -w "%{http_code}" "$BASE_URL/api/sync-stats.php")
    end_time=$(date +%s.%N)
    
    http_code="${response: -3}"
    request_time=$(echo "($end_time - $start_time) * 1000" | bc)
    total_time=$(echo "$total_time + $request_time" | bc)
    
    if [ "$http_code" = "200" ]; then
        ((successful_requests++))
    fi
    
    echo -n "."
done

echo ""

if [ $successful_requests -gt 0 ]; then
    avg_time=$(echo "scale=1; $total_time / 10" | bc)
    success_rate=$(echo "scale=1; $successful_requests * 100 / 10" | bc)
    
    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
    echo "- –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: $successful_requests/10 (${success_rate}%)"
    echo "- –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: ${avg_time}ms"
    
    if (( $(echo "$avg_time < 100" | bc -l) )); then
        echo -e "- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${GREEN}–û—Ç–ª–∏—á–Ω–æ${NC}"
    elif (( $(echo "$avg_time < 200" | bc -l) )); then
        echo -e "- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${YELLOW}–•–æ—Ä–æ—à–æ${NC}"
    else
        echo -e "- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${RED}–ú–µ–¥–ª–µ–Ω–Ω–æ${NC}"
    fi
else
    echo -e "${RED}–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –æ—à–∏–±–∫–æ–π${NC}"
fi