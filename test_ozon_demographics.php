<?php
/**
 * –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö OzonAnalyticsAPI
 */

require_once 'src/classes/OzonAnalyticsAPI.php';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
$host = 'localhost';
$dbname = 'manhattan_analytics';
$username = 'root';
$password = '';

try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    $pdo = new PDO("mysql:host=$host;dbname=$dbname;charset=utf8mb4", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ\n";
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
    $clientId = 'test_client_id';
    $apiKey = 'test_api_key';
    
    $ozonAPI = new OzonAnalyticsAPI($clientId, $apiKey, $pdo);
    
    echo "‚úÖ OzonAnalyticsAPI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n";
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞—Ç—ã
    $dateFrom = '2024-01-01';
    $dateTo = '2024-01-31';
    
    echo "\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö ===\n";
    
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –∫—ç—à–∞
    echo "\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getDemographics() –±–µ–∑ –∫—ç—à–∞...\n";
    try {
        $filters = ['use_cache' => false];
        $demographics = $ozonAPI->getDemographics($dateFrom, $dateTo, $filters);
        
        echo "   ‚úÖ –ú–µ—Ç–æ–¥ getDemographics() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ\n";
        echo "   üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: " . count($demographics) . "\n";
        
        if (!empty($demographics)) {
            $firstRecord = $demographics[0];
            echo "   üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏:\n";
            foreach ($firstRecord as $key => $value) {
                echo "      - $key: " . (is_null($value) ? 'null' : $value) . "\n";
            }
        }
        
    } catch (Exception $e) {
        echo "   ‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
        echo "   ‚ÑπÔ∏è  –≠—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ, —Ç–∞–∫ –∫–∞–∫ –º—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É API Ozon\n";
    }
    
    // –¢–µ—Å—Ç 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    echo "\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getAggregatedDemographicsData()...\n";
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
    $testDemographicsData = [
        [
            'date_from' => $dateFrom,
            'date_to' => $dateTo,
            'age_group' => '25-34',
            'gender' => 'male',
            'region' => '–ú–æ—Å–∫–≤–∞',
            'orders_count' => 150,
            'revenue' => 75000.00,
            'cached_at' => date('Y-m-d H:i:s')
        ],
        [
            'date_from' => $dateFrom,
            'date_to' => $dateTo,
            'age_group' => '35-44',
            'gender' => 'female',
            'region' => '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            'orders_count' => 120,
            'revenue' => 60000.00,
            'cached_at' => date('Y-m-d H:i:s')
        ],
        [
            'date_from' => $dateFrom,
            'date_to' => $dateTo,
            'age_group' => '25-34',
            'gender' => 'female',
            'region' => '–ú–æ—Å–∫–≤–∞',
            'orders_count' => 100,
            'revenue' => 50000.00,
            'cached_at' => date('Y-m-d H:i:s')
        ]
    ];
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
    try {
        $sql = "INSERT INTO ozon_demographics 
                (date_from, date_to, age_group, gender, region, orders_count, revenue, cached_at)
                VALUES 
                (:date_from, :date_to, :age_group, :gender, :region, :orders_count, :revenue, :cached_at)
                ON DUPLICATE KEY UPDATE
                orders_count = VALUES(orders_count),
                revenue = VALUES(revenue),
                cached_at = VALUES(cached_at)";
        
        $stmt = $pdo->prepare($sql);
        
        foreach ($testDemographicsData as $item) {
            $stmt->execute($item);
        }
        
        echo "   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î\n";
        
        // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∞–≥—Ä–µ–≥–∞—Ü–∏—é
        $aggregatedData = $ozonAPI->getAggregatedDemographicsData($dateFrom, $dateTo, ['use_cache' => true]);
        
        echo "   ‚úÖ –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã\n";
        echo "   üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: " . $aggregatedData['total_orders'] . "\n";
        echo "   üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: " . number_format($aggregatedData['total_revenue'], 2) . " —Ä—É–±.\n";
        echo "   üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: " . $aggregatedData['records_count'] . "\n";
        
        echo "\n   üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º:\n";
        foreach ($aggregatedData['age_groups'] as $ageGroup => $data) {
            echo "      - $ageGroup: {$data['orders_count']} –∑–∞–∫–∞–∑–æ–≤ ({$data['orders_percentage']}%), " . 
                 number_format($data['revenue'], 2) . " —Ä—É–±. ({$data['revenue_percentage']}%)\n";
        }
        
        echo "\n   üë• –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É:\n";
        foreach ($aggregatedData['gender_distribution'] as $gender => $data) {
            echo "      - $gender: {$data['orders_count']} –∑–∞–∫–∞–∑–æ–≤ ({$data['orders_percentage']}%), " . 
                 number_format($data['revenue'], 2) . " —Ä—É–±. ({$data['revenue_percentage']}%)\n";
        }
        
        echo "\n   üåç –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º:\n";
        foreach ($aggregatedData['regional_distribution'] as $region => $data) {
            echo "      - $region: {$data['orders_count']} –∑–∞–∫–∞–∑–æ–≤ ({$data['orders_percentage']}%), " . 
                 number_format($data['revenue'], 2) . " —Ä—É–±. ({$data['revenue_percentage']}%)\n";
        }
        
    } catch (Exception $e) {
        echo "   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: " . $e->getMessage() . "\n";
    }
    
    // –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
    echo "\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getDemographicsWithTimePeriods()...\n";
    try {
        $timePeriodsData = $ozonAPI->getDemographicsWithTimePeriods($dateFrom, $dateTo, 'week', ['use_cache' => true]);
        
        echo "   ‚úÖ –î–∞–Ω–Ω—ã–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–µ–π –ø–æ–ª—É—á–µ–Ω—ã\n";
        echo "   üìÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–∏–æ–¥–æ–≤: " . count($timePeriodsData) . "\n";
        
        foreach ($timePeriodsData as $index => $periodData) {
            echo "   üìä –ü–µ—Ä–∏–æ–¥ " . ($index + 1) . ": {$periodData['period']}\n";
            echo "      - –ó–∞–∫–∞–∑–æ–≤: {$periodData['demographics']['total_orders']}\n";
            echo "      - –í—ã—Ä—É—á–∫–∞: " . number_format($periodData['demographics']['total_revenue'], 2) . " —Ä—É–±.\n";
        }
        
    } catch (Exception $e) {
        echo "   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–µ–π: " . $e->getMessage() . "\n";
    }
    
    // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    echo "\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...\n";
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
    $testNormalizationData = [
        [
            'date_from' => $dateFrom,
            'date_to' => $dateTo,
            'age_group' => '–¥–æ 18',
            'gender' => '–º',
            'region' => '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
            'orders_count' => 50,
            'revenue' => 25000.00,
            'cached_at' => date('Y-m-d H:i:s')
        ],
        [
            'date_from' => $dateFrom,
            'date_to' => $dateTo,
            'age_group' => '65 –∏ —Å—Ç–∞—Ä—à–µ',
            'gender' => '–∂–µ–Ω—Å–∫–∏–π',
            'region' => '–¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω',
            'orders_count' => 30,
            'revenue' => 15000.00,
            'cached_at' => date('Y-m-d H:i:s')
        ]
    ];
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    $pdo->exec("DELETE FROM ozon_demographics WHERE date_from = '$dateFrom' AND date_to = '$dateTo'");
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    $stmt = $pdo->prepare($sql);
    foreach ($testNormalizationData as $item) {
        $stmt->execute($item);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
    $normalizedData = $ozonAPI->getDemographics($dateFrom, $dateTo, ['use_cache' => true]);
    
    echo "   ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n";
    echo "   üìã –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n";
    foreach ($normalizedData as $item) {
        echo "      - –í–æ–∑—Ä–∞—Å—Ç: {$item['age_group']}, –ü–æ–ª: {$item['gender']}, –†–µ–≥–∏–æ–Ω: {$item['region']}\n";
    }
    
    // –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    echo "\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è...\n";
    
    $startTime = microtime(true);
    $cachedData = $ozonAPI->getDemographics($dateFrom, $dateTo, ['use_cache' => true]);
    $cacheTime = microtime(true) - $startTime;
    
    echo "   ‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞ –ø–æ–ª—É—á–µ–Ω—ã –∑–∞ " . round($cacheTime * 1000, 2) . " –º—Å\n";
    echo "   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∏–∑ –∫—ç—à–∞: " . count($cachedData) . "\n";
    
    echo "\n=== –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n";
    echo "‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
    
} catch (Exception $e) {
    echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
    echo "–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:\n" . $e->getTraceAsString() . "\n";
}
?>