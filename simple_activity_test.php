<?php
/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤
 */

echo "üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤\n";
echo "=" . str_repeat("=", 50) . "\n\n";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
$_ENV['APP_ENV'] = 'production';
require_once __DIR__ . '/config/production_db_override.php';
require_once __DIR__ . '/config/production.php';

try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    $pdo = getProductionPgConnection();
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ\n\n";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    function testActivityFilter($pdo, $filter) {
        echo "üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä: '$filter'\n";
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å–ª–æ–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–∞–∫ –≤ API
        switch ($filter) {
            case 'active':
                $condition = " AND i.current_stock > 0 ";
                $description = "—Ç–æ–≤–∞—Ä—ã —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ > 0";
                break;
            case 'inactive':
                $condition = " AND i.current_stock = 0 ";
                $description = "—Ç–æ–≤–∞—Ä—ã —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ = 0";
                break;
            case 'all':
                $condition = " ";
                $description = "–≤—Å–µ —Ç–æ–≤–∞—Ä—ã";
                break;
            default:
                $condition = " AND i.current_stock > 0 ";
                $description = "—Ç–æ–≤–∞—Ä—ã —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ > 0 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)";
        }
        
        echo "   –û–ø–∏—Å–∞–Ω–∏–µ: $description\n";
        echo "   SQL —É—Å–ª–æ–≤–∏–µ: '$condition'\n";
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        $sql = "
            SELECT 
                COUNT(DISTINCT i.sku) as total_products,
                COUNT(CASE WHEN i.current_stock <= 5 THEN 1 END) as critical_count,
                COUNT(CASE WHEN i.current_stock > 5 AND i.current_stock <= 20 THEN 1 END) as low_count,
                COUNT(CASE WHEN i.current_stock > 100 THEN 1 END) as overstock_count,
                SUM(i.current_stock) as total_stock
            FROM inventory_data i
            WHERE i.current_stock IS NOT NULL $condition
        ";
        
        try {
            $stmt = $pdo->prepare($sql);
            $stmt->execute();
            $result = $stmt->fetch(PDO::FETCH_ASSOC);
            
            echo "   üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n";
            echo "      - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: " . $result['total_products'] . "\n";
            echo "      - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ (‚â§5): " . $result['critical_count'] . "\n";
            echo "      - –ù–∏–∑–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ (6-20): " . $result['low_count'] . "\n";
            echo "      - –ò–∑–±—ã—Ç–æ–∫ (>100): " . $result['overstock_count'] . "\n";
            echo "      - –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: " . $result['total_stock'] . "\n";
            
            return $result;
            
        } catch (PDOException $e) {
            echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: " . $e->getMessage() . "\n";
            return null;
        }
        
        echo "\n";
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    echo "üéØ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤:\n";
    $activity_sql = "
        SELECT 
            COUNT(CASE WHEN i.current_stock > 0 THEN 1 END) as active_count,
            COUNT(CASE WHEN i.current_stock = 0 THEN 1 END) as inactive_count,
            COUNT(*) as total_count
        FROM inventory_data i
        WHERE i.current_stock IS NOT NULL
    ";
    
    $stmt = $pdo->prepare($activity_sql);
    $stmt->execute();
    $activity_stats = $stmt->fetch(PDO::FETCH_ASSOC);
    
    echo "   - –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–æ—Å—Ç–∞—Ç–∫–∏ > 0): " . $activity_stats['active_count'] . "\n";
    echo "   - –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–æ—Å—Ç–∞—Ç–∫–∏ = 0): " . $activity_stats['inactive_count'] . "\n";
    echo "   - –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: " . $activity_stats['total_count'] . "\n";
    
    if ($activity_stats['total_count'] > 0) {
        $active_percentage = round(($activity_stats['active_count'] / $activity_stats['total_count']) * 100, 2);
        $inactive_percentage = round(($activity_stats['inactive_count'] / $activity_stats['total_count']) * 100, 2);
        echo "   - % –∞–∫—Ç–∏–≤–Ω—ã—Ö: $active_percentage%\n";
        echo "   - % –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: $inactive_percentage%\n";
    }
    
    echo "\n" . str_repeat("-", 50) . "\n\n";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ñ–∏–ª—å—Ç—Ä
    $active_result = testActivityFilter($pdo, 'active');
    echo str_repeat("-", 30) . "\n";
    
    $inactive_result = testActivityFilter($pdo, 'inactive');
    echo str_repeat("-", 30) . "\n";
    
    $all_result = testActivityFilter($pdo, 'all');
    echo str_repeat("-", 30) . "\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:\n";
    
    if ($active_result && $inactive_result && $all_result) {
        $sum_active_inactive = $active_result['total_products'] + $inactive_result['total_products'];
        $all_products = $all_result['total_products'];
        
        if ($sum_active_inactive == $all_products) {
            echo "   ‚úÖ –õ–æ–≥–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: –∞–∫—Ç–∏–≤–Ω—ã–µ + –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ = –≤—Å–µ —Ç–æ–≤–∞—Ä—ã ($sum_active_inactive = $all_products)\n";
        } else {
            echo "   ‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–∫–∏: –∞–∫—Ç–∏–≤–Ω—ã–µ + –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ ‚â† –≤—Å–µ —Ç–æ–≤–∞—Ä—ã ($sum_active_inactive ‚â† $all_products)\n";
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–º–µ—é—Ç –æ—Å—Ç–∞—Ç–∫–∏ > 0
        $check_active_sql = "
            SELECT COUNT(*) as count 
            FROM inventory_data i 
            WHERE i.current_stock IS NOT NULL AND i.current_stock > 0
        ";
        $stmt = $pdo->prepare($check_active_sql);
        $stmt->execute();
        $check_active = $stmt->fetchColumn();
        
        if ($check_active == $active_result['total_products']) {
            echo "   ‚úÖ –§–∏–ª—å—Ç—Ä 'active' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
        } else {
            echo "   ‚ùå –§–∏–ª—å—Ç—Ä 'active' —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ ($check_active ‚â† {$active_result['total_products']})\n";
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–º–µ—é—Ç –æ—Å—Ç–∞—Ç–∫–∏ = 0
        $check_inactive_sql = "
            SELECT COUNT(*) as count 
            FROM inventory_data i 
            WHERE i.current_stock IS NOT NULL AND i.current_stock = 0
        ";
        $stmt = $pdo->prepare($check_inactive_sql);
        $stmt->execute();
        $check_inactive = $stmt->fetchColumn();
        
        if ($check_inactive == $inactive_result['total_products']) {
            echo "   ‚úÖ –§–∏–ª—å—Ç—Ä 'inactive' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
        } else {
            echo "   ‚ùå –§–∏–ª—å—Ç—Ä 'inactive' —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ ($check_inactive ‚â† {$inactive_result['total_products']})\n";
        }
    }
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}

echo "\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n";
?>