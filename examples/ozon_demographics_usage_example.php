<?php
/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö OzonAnalyticsAPI
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 * –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ API Ozon.
 */

require_once '../src/classes/OzonAnalyticsAPI.php';

// –ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
$pdo = new PDO("mysql:host=localhost;dbname=manhattan_analytics;charset=utf8mb4", 
               "username", "password");
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
$clientId = 'your_ozon_client_id';
$apiKey = 'your_ozon_api_key';
$ozonAPI = new OzonAnalyticsAPI($clientId, $apiKey, $pdo);

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
$dateFrom = '2024-01-01';
$dateTo = '2024-01-31';

echo "=== –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö Ozon ===\n\n";

try {
    // 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    echo "1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...\n";
    
    $filters = [
        'use_cache' => true,  // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
        'region' => '–ú–æ—Å–∫–≤–∞'  // –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–≥–∏–æ–Ω—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    ];
    
    $demographics = $ozonAPI->getDemographics($dateFrom, $dateTo, $filters);
    
    echo "   –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: " . count($demographics) . "\n";
    echo "   –ü–µ—Ä–∏–æ–¥: $dateFrom - $dateTo\n\n";
    
    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    echo "2. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ...\n";
    
    $aggregatedData = $ozonAPI->getAggregatedDemographicsData($dateFrom, $dateTo, $filters);
    
    echo "   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {$aggregatedData['total_orders']}\n";
    echo "   –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: " . number_format($aggregatedData['total_revenue'], 2) . " —Ä—É–±.\n\n";
    
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º
    echo "   üìä –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã:\n";
    foreach ($aggregatedData['age_groups'] as $ageGroup => $data) {
        echo "      $ageGroup: {$data['orders_count']} –∑–∞–∫–∞–∑–æ–≤ ({$data['orders_percentage']}%)\n";
    }
    echo "\n";
    
    // –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É
    echo "   üë• –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É:\n";
    foreach ($aggregatedData['gender_distribution'] as $gender => $data) {
        $genderLabel = $gender === 'male' ? '–ú—É–∂—á–∏–Ω—ã' : '–ñ–µ–Ω—â–∏–Ω—ã';
        echo "      $genderLabel: {$data['orders_count']} –∑–∞–∫–∞–∑–æ–≤ ({$data['orders_percentage']}%)\n";
    }
    echo "\n";
    
    // –¢–æ–ø-5 —Ä–µ–≥–∏–æ–Ω–æ–≤
    echo "   üåç –¢–æ–ø-5 —Ä–µ–≥–∏–æ–Ω–æ–≤:\n";
    $topRegions = array_slice($aggregatedData['regional_distribution'], 0, 5, true);
    foreach ($topRegions as $region => $data) {
        echo "      $region: {$data['orders_count']} –∑–∞–∫–∞–∑–æ–≤, " . 
             number_format($data['revenue'], 2) . " —Ä—É–±.\n";
    }
    echo "\n";
    
    // 3. –ê–Ω–∞–ª–∏–∑ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–∞–º
    echo "3. –ê–Ω–∞–ª–∏–∑ –ø–æ –Ω–µ–¥–µ–ª—è–º...\n";
    
    $weeklyData = $ozonAPI->getDemographicsWithTimePeriods($dateFrom, $dateTo, 'week', $filters);
    
    foreach ($weeklyData as $weekData) {
        echo "   {$weekData['period']}:\n";
        echo "      –ó–∞–∫–∞–∑–æ–≤: {$weekData['demographics']['total_orders']}\n";
        echo "      –í—ã—Ä—É—á–∫–∞: " . number_format($weekData['demographics']['total_revenue'], 2) . " —Ä—É–±.\n";
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –Ω–µ–¥–µ–ª–∏
        if (!empty($weekData['demographics']['age_groups'])) {
            $topAgeGroup = array_keys($weekData['demographics']['age_groups'])[0];
            $topAgeData = $weekData['demographics']['age_groups'][$topAgeGroup];
            echo "      –¢–æ–ø –≤–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞: $topAgeGroup ({$topAgeData['orders_percentage']}%)\n";
        }
        echo "\n";
    }
    
    // 4. –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    echo "4. –≠–∫—Å–ø–æ—Ä—Ç –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...\n";
    
    $exportFilters = [
        'date_from' => $dateFrom,
        'date_to' => $dateTo,
        'region' => '–ú–æ—Å–∫–≤–∞'
    ];
    
    // –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON
    $jsonData = $ozonAPI->exportData('demographics', 'json', $exportFilters);
    echo "   JSON —ç–∫—Å–ø–æ—Ä—Ç –≥–æ—Ç–æ–≤ (—Ä–∞–∑–º–µ—Ä: " . strlen($jsonData) . " –±–∞–π—Ç)\n";
    
    // –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV
    $csvFile = $ozonAPI->exportData('demographics', 'csv', $exportFilters);
    echo "   CSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: $csvFile\n\n";
    
    // 5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∞–Ω–∞–ª–∏–∑
    echo "5. –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø—ã...\n";
    
    // –ê–Ω–∞–ª–∏–∑ –º–æ–ª–æ–¥–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (18-34 –≥–æ–¥–∞)
    $youngAudienceFilters = [
        'use_cache' => true,
        'age_group' => '25-34'
    ];
    
    $youngAudienceData = $ozonAPI->getAggregatedDemographicsData($dateFrom, $dateTo, $youngAudienceFilters);
    
    echo "   –ê–Ω–∞–ª–∏–∑ –≥—Ä—É–ø–ø—ã 25-34 –≥–æ–¥–∞:\n";
    echo "      –ó–∞–∫–∞–∑–æ–≤: {$youngAudienceData['total_orders']}\n";
    echo "      –í—ã—Ä—É—á–∫–∞: " . number_format($youngAudienceData['total_revenue'], 2) . " —Ä—É–±.\n";
    
    if (!empty($youngAudienceData['gender_distribution'])) {
        echo "      –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ:\n";
        foreach ($youngAudienceData['gender_distribution'] as $gender => $data) {
            $genderLabel = $gender === 'male' ? '–ú—É–∂—á–∏–Ω—ã' : '–ñ–µ–Ω—â–∏–Ω—ã';
            echo "         $genderLabel: {$data['orders_percentage']}%\n";
        }
    }
    echo "\n";
    
    echo "=== –ê–Ω–∞–ª–∏–∑ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω ===\n";
    
} catch (OzonAPIException $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ API Ozon: " . $e->getMessage() . "\n";
    echo "   –¢–∏–ø –æ—à–∏–±–∫–∏: " . $e->getErrorType() . "\n";
    echo "   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: " . $e->getRecommendation() . "\n";
    
} catch (Exception $e) {
    echo "‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

/**
 * –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¥–∞—à–±–æ—Ä–¥–æ–º
 */
function getDemographicsForDashboard($ozonAPI, $dateFrom, $dateTo) {
    try {
        $data = $ozonAPI->getAggregatedDemographicsData($dateFrom, $dateTo);
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        return [
            'success' => true,
            'data' => [
                'summary' => [
                    'total_orders' => $data['total_orders'],
                    'total_revenue' => $data['total_revenue'],
                    'date_range' => $data['date_range']
                ],
                'age_chart_data' => array_map(function($ageGroup, $data) {
                    return [
                        'label' => $ageGroup,
                        'value' => $data['orders_count'],
                        'percentage' => $data['orders_percentage']
                    ];
                }, array_keys($data['age_groups']), $data['age_groups']),
                'gender_chart_data' => array_map(function($gender, $data) {
                    return [
                        'label' => $gender === 'male' ? '–ú—É–∂—á–∏–Ω—ã' : '–ñ–µ–Ω—â–∏–Ω—ã',
                        'value' => $data['orders_count'],
                        'percentage' => $data['orders_percentage']
                    ];
                }, array_keys($data['gender_distribution']), $data['gender_distribution']),
                'top_regions' => array_slice($data['regional_distribution'], 0, 10, true)
            ]
        ];
        
    } catch (Exception $e) {
        return [
            'success' => false,
            'error' => $e->getMessage()
        ];
    }
}

/**
 * –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏
 */
function generateDemographicsReport($ozonAPI, $dateFrom, $dateTo) {
    $report = [
        'title' => '–î–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç Ozon',
        'period' => "$dateFrom - $dateTo",
        'generated_at' => date('Y-m-d H:i:s'),
        'sections' => []
    ];
    
    try {
        // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        $aggregatedData = $ozonAPI->getAggregatedDemographicsData($dateFrom, $dateTo);
        
        $report['sections']['summary'] = [
            'title' => '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
            'total_orders' => $aggregatedData['total_orders'],
            'total_revenue' => $aggregatedData['total_revenue'],
            'avg_order_value' => $aggregatedData['total_orders'] > 0 ? 
                round($aggregatedData['total_revenue'] / $aggregatedData['total_orders'], 2) : 0
        ];
        
        // –ê–Ω–∞–ª–∏–∑ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º
        $report['sections']['age_analysis'] = [
            'title' => '–ê–Ω–∞–ª–∏–∑ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º',
            'groups' => $aggregatedData['age_groups']
        ];
        
        // –ê–Ω–∞–ª–∏–∑ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
        $report['sections']['regional_analysis'] = [
            'title' => '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
            'top_regions' => array_slice($aggregatedData['regional_distribution'], 0, 10, true)
        ];
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑
        $weeklyData = $ozonAPI->getDemographicsWithTimePeriods($dateFrom, $dateTo, 'week');
        $report['sections']['time_analysis'] = [
            'title' => '–ê–Ω–∞–ª–∏–∑ –ø–æ –Ω–µ–¥–µ–ª—è–º',
            'periods' => array_map(function($period) {
                return [
                    'period' => $period['period'],
                    'orders' => $period['demographics']['total_orders'],
                    'revenue' => $period['demographics']['total_revenue']
                ];
            }, $weeklyData)
        ];
        
        return $report;
        
    } catch (Exception $e) {
        $report['error'] = $e->getMessage();
        return $report;
    }
}

?>