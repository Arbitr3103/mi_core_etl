<?php
/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SafeSyncEngine
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–≤–∏–∂–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */

require_once __DIR__ . '/../config.php';
require_once __DIR__ . '/../src/SafeSyncEngine.php';
require_once __DIR__ . '/../src/FallbackDataProvider.php';
require_once __DIR__ . '/../src/DataTypeNormalizer.php';

echo "=== –¢–µ—Å—Ç SafeSyncEngine ===\n\n";

try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–≤–∏–∂–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    echo "1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SafeSyncEngine...\n";
    $syncEngine = new SafeSyncEngine();
    echo "‚úÖ SafeSyncEngine –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n\n";
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    echo "2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...\n";
    $stats = $syncEngine->getSyncStatistics();
    
    if (!empty($stats)) {
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n";
        echo "   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {$stats['total_products']}\n";
        echo "   –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {$stats['synced']}\n";
        echo "   –û–∂–∏–¥–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {$stats['pending']}\n";
        echo "   –û—à–∏–±–∫–∏: {$stats['failed']}\n";
        echo "   –ü—Ä–æ—Ü–µ–Ω—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {$stats['sync_percentage']}%\n";
        echo "   –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {$stats['last_sync_time']}\n";
    } else {
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–≤–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞)\n";
    }
    echo "\n";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º DataTypeNormalizer
    echo "3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DataTypeNormalizer...\n";
    $normalizer = new DataTypeNormalizer();
    
    $testProduct = [
        'inventory_product_id' => 123456,  // INT
        'ozon_product_id' => '789012',     // STRING
        'name' => '  –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä  ',    // STRING —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        'quantity' => '100',               // STRING —á–∏—Å–ª–æ
        'price' => '1,234.56'              // STRING —Å –∑–∞–ø—è—Ç–æ–π
    ];
    
    echo "   –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n";
    print_r($testProduct);
    
    $normalized = $normalizer->normalizeProduct($testProduct);
    
    echo "\n   –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n";
    print_r($normalized);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
    $validation = $normalizer->validateNormalizedData($normalized);
    echo "\n   –í–∞–ª–∏–¥–∞—Ü–∏—è: " . ($validation['valid'] ? '‚úÖ –ü—Ä–æ–π–¥–µ–Ω–∞' : '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞') . "\n";
    if (!$validation['valid']) {
        echo "   –û—à–∏–±–∫–∏:\n";
        foreach ($validation['errors'] as $error) {
            echo "   - {$error}\n";
        }
    }
    echo "\n";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ ID
    echo "4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è ID...\n";
    $id1 = 123456;
    $id2 = '123456';
    $id3 = '789012';
    
    echo "   –°—Ä–∞–≤–Ω–µ–Ω–∏–µ {$id1} –∏ {$id2}: " . 
         ($normalizer->compareIds($id1, $id2) ? '‚úÖ –†–∞–≤–Ω—ã' : '‚ùå –ù–µ —Ä–∞–≤–Ω—ã') . "\n";
    echo "   –°—Ä–∞–≤–Ω–µ–Ω–∏–µ {$id1} –∏ {$id3}: " . 
         ($normalizer->compareIds($id1, $id3) ? '‚úÖ –†–∞–≤–Ω—ã' : '‚ùå –ù–µ —Ä–∞–≤–Ω—ã') . "\n";
    echo "\n";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º FallbackDataProvider
    echo "5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FallbackDataProvider...\n";
    $pdo = new PDO(
        sprintf('mysql:host=%s;port=%s;dbname=%s;charset=utf8mb4', DB_HOST, DB_PORT, DB_NAME),
        DB_USER,
        DB_PASSWORD,
        [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION]
    );
    
    $fallbackProvider = new FallbackDataProvider($pdo, new SimpleLogger());
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞
    $cacheStats = $fallbackProvider->getCacheStatistics();
    
    if (!empty($cacheStats)) {
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞:\n";
        echo "   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {$cacheStats['total_entries']}\n";
        echo "   –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π: {$cacheStats['cached_names']}\n";
        echo "   –ó–∞–≥–ª—É—à–µ–∫: {$cacheStats['placeholder_names']}\n";
        echo "   –†–µ–∞–ª—å–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π: {$cacheStats['real_names']}\n";
        echo "   –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç –∫—ç—à–∞: {$cacheStats['avg_cache_age_hours']} —á–∞—Å–æ–≤\n";
        echo "   Hit rate: {$cacheStats['cache_hit_rate']}%\n";
    } else {
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞\n";
    }
    echo "\n";
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    echo "6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...\n";
    $syncEngine->setBatchSize(20);
    $syncEngine->setMaxRetries(5);
    echo "‚úÖ –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞: 20\n";
    echo "‚úÖ –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: 5\n";
    echo "\n";
    
    // –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º)
    echo "7. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–ª–∏–º–∏—Ç: 5 —Ç–æ–≤–∞—Ä–æ–≤)...\n";
    echo "‚ö†Ô∏è  –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É:\n";
    echo "// \$results = \$syncEngine->syncProductNames(5);\n";
    echo "\n";
    
    /*
    $results = $syncEngine->syncProductNames(5);
    
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:\n";
    echo "   –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {$results['total']}\n";
    echo "   –£—Å–ø–µ—à–Ω–æ: {$results['success']}\n";
    echo "   –û—à–∏–±–∫–∏: {$results['failed']}\n";
    echo "   –ü—Ä–æ–ø—É—â–µ–Ω–æ: {$results['skipped']}\n";
    
    if (!empty($results['errors'])) {
        echo "\n   ‚ùå –û—à–∏–±–∫–∏:\n";
        foreach ($results['errors'] as $error) {
            echo "   - " . json_encode($error, JSON_UNESCAPED_UNICODE) . "\n";
        }
    }
    */
    
    echo "\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!\n";
    
} catch (Exception $e) {
    echo "\n‚ùå –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
    echo "–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞:\n" . $e->getTraceAsString() . "\n";
    exit(1);
}

echo "\n=== –ö–æ–Ω–µ—Ü —Ç–µ—Å—Ç–∞ ===\n";
