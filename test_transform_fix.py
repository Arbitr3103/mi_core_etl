#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ transform_posting_data —Å CSV —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname('.'), 'importers'))

from ozon_importer import request_report, get_report_by_code, transform_posting_data
from datetime import datetime, timedelta
import csv
import io

def test_transform_posting_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö CSV –∑–∞–∫–∞–∑–æ–≤"""
    
    # –ë–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å
    target_date = datetime.now() - timedelta(days=3)
    start_date = target_date.strftime('%Y-%m-%d')
    end_date = target_date.strftime('%Y-%m-%d')

    print(f'üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é CSV –∑–∞–∫–∞–∑–æ–≤ –∑–∞ {start_date}')
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º CSV –¥–∞–Ω–Ω—ã–µ
        print('üì° –ó–∞–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç...')
        report_code = request_report('postings', start_date, end_date)
        
        print('‚è≥ –ü–æ–ª—É—á–∞–µ–º CSV...')
        csv_content = get_report_by_code(report_code)
        
        print('üìä –ü–∞—Ä—Å–∏–º CSV...')
        csv_file = io.StringIO(csv_content)
        csv_reader = csv.DictReader(csv_file, delimiter=';')
        
        postings = []
        for row in csv_reader:
            postings.append(row)
        
        if not postings:
            print('‚ùå –ó–∞–∫–∞–∑—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã')
            return
            
        print(f'‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(postings)}')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–≤—ã—Ö 3 –∑–∞–∫–∞–∑–æ–≤
        print(f'\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–≤—ã—Ö 3 –∑–∞–∫–∞–∑–æ–≤:')
        
        for i, csv_row in enumerate(postings[:3]):
            print(f'\n--- –ó–∞–∫–∞–∑ {i+1} ---')
            print(f'–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {csv_row.get("–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞", "")}')
            print(f'–ê—Ä—Ç–∏–∫—É–ª: {csv_row.get("–ê—Ä—Ç–∏–∫—É–ª", "")}')
            print(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {csv_row.get("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "")}')
            print(f'–¶–µ–Ω–∞: {csv_row.get("–í–∞—à–∞ —Ü–µ–Ω–∞", "")}')
            
            try:
                # –í—ã–∑—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
                # –í–ê–ñ–ù–û: –§—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î, –ø–æ—ç—Ç–æ–º—É —Ç–µ—Å—Ç –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å
                # –ù–æ –º—ã —É–≤–∏–¥–∏–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –ø–æ–ª—è
                transformed = transform_posting_data(csv_row)
                
                if transformed:
                    print(f'‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {len(transformed)} –∑–∞–ø–∏—Å–µ–π')
                    record = transformed[0]
                    print(f'  order_id: {record.get("order_id")}')
                    print(f'  sku: {record.get("sku")}')
                    print(f'  qty: {record.get("qty")}')
                    print(f'  price: {record.get("price")}')
                else:
                    print('‚ö†Ô∏è  –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫')
                    
            except Exception as e:
                if "Can't connect to MySQL server" in str(e):
                    print('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ë–î (–æ–∂–∏–¥–∞–µ–º–æ), –Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç')
                elif "–Ω–µ –Ω–∞–π–¥–µ–Ω –≤ dim_products" in str(e):
                    print('‚ö†Ô∏è  –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ dim_products (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–∞)')
                else:
                    print(f'‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}')
                    
        # –ü—Ä–æ–≤–µ—Ä–∏–º –º–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π –±–µ–∑ –≤—ã–∑–æ–≤–∞ –ë–î
        print(f'\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π (–±–µ–∑ –ë–î):')
        sample_row = postings[0]
        
        order_id = sample_row.get('–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞', '')
        sku_ozon = sample_row.get('–ê—Ä—Ç–∏–∫—É–ª', '')
        quantity_str = sample_row.get('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '0')
        price_str = sample_row.get('–í–∞—à–∞ —Ü–µ–Ω–∞', '0')
        date_str = sample_row.get('–ü—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É', '')
        
        print(f'  –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: "{order_id}" (–±—ã–ª–æ: posting_number)')
        print(f'  –ê—Ä—Ç–∏–∫—É–ª: "{sku_ozon}" (–±—ã–ª–æ: offer_id)')
        print(f'  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: "{quantity_str}" (–±—ã–ª–æ: quantity)')
        print(f'  –¶–µ–Ω–∞: "{price_str}" (–±—ã–ª–æ: price)')
        print(f'  –î–∞—Ç–∞: "{date_str[:10]}" (–±—ã–ª–æ: created_at)')
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–∞—Ä—Å–∏–Ω–≥ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        try:
            quantity = int(quantity_str)
            price = float(price_str.replace(',', '.'))
            print(f'‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —á–∏—Å–µ–ª —É—Å–ø–µ—à–µ–Ω: qty={quantity}, price={price}')
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —á–∏—Å–µ–ª: {e}')
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')

if __name__ == "__main__":
    test_transform_posting_data()
