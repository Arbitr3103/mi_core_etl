#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ API –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤.
"""

import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é importers
sys.path.append(os.path.join(os.path.dirname(__file__), 'importers'))

from ozon_importer import request_report, get_report_by_code, get_postings_from_api

def test_request_postings_report():
    """–¢–µ—Å—Ç –∑–∞–∫–∞–∑–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º."""
    print("=== –¢–µ—Å—Ç 1: –ó–∞–∫–∞–∑ –æ—Ç—á–µ—Ç–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º ===")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    end_date = datetime.now().strftime('%Y-%m-%d')
    start_date = (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
    
    try:
        print(f"–ó–∞–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç –ø–æ –∑–∞–∫–∞–∑–∞–º —Å {start_date} –ø–æ {end_date}")
        report_code = request_report('postings', start_date, end_date)
        print(f"‚úÖ –û—Ç—á–µ—Ç –∑–∞–∫–∞–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ, –∫–æ–¥: {report_code}")
        return report_code
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫–∞–∑–∞ –æ—Ç—á–µ—Ç–∞: {e}")
        return None

def test_get_postings_report(report_code):
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º."""
    print(f"\n=== –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ {report_code} ===")
    
    if not report_code:
        print("‚ùå –ù–µ—Ç –∫–æ–¥–∞ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return None
    
    try:
        print("–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞ –∏ —Å–∫–∞—á–∏–≤–∞–µ–º...")
        csv_content = get_report_by_code(report_code)
        print(f"‚úÖ CSV-—Ñ–∞–π–ª –ø–æ–ª—É—á–µ–Ω, —Ä–∞–∑–º–µ—Ä: {len(csv_content)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
        lines = csv_content.split('\n')[:5]
        print("\n–ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ CSV:")
        for i, line in enumerate(lines):
            print(f"  {i+1}: {line[:100]}...")
        
        return csv_content
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")
        return None

def test_full_postings_cycle():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API."""
    print("\n=== –¢–µ—Å—Ç 3: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ ===")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    end_date = datetime.now().strftime('%Y-%m-%d')
    start_date = (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
    
    try:
        print(f"–ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã —Å {start_date} –ø–æ {end_date} —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API")
        postings = get_postings_from_api(start_date, end_date)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(postings)}")
        
        if postings:
            print("\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞:")
            sample_posting = postings[0]
            for key, value in list(sample_posting.items())[:15]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 15 –ø–æ–ª–µ–π
                print(f"  {key}: {value}")
        
        return postings
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤: {e}")
        return []

def run_all_postings_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –Ω–æ–≤–æ–≥–æ API –∑–∞–∫–∞–∑–æ–≤."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ API –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤\n")
    
    # –¢–µ—Å—Ç 1: –ó–∞–∫–∞–∑ –æ—Ç—á–µ—Ç–∞
    report_code = test_request_postings_report()
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    csv_content = test_get_postings_report(report_code)
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª
    postings = test_full_postings_cycle()
    
    if postings:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("–ù–æ–≤—ã–π API –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")

if __name__ == "__main__":
    run_all_postings_tests()
