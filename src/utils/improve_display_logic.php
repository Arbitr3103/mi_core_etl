<?php
/**
 * –£–ª—É—á—à–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
 * –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–π
 */

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
function loadEnvConfig() {
    $envFile = __DIR__ . '/.env';
    if (file_exists($envFile)) {
        $lines = file($envFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
        foreach ($lines as $line) {
            if (strpos($line, '=') !== false && strpos($line, '#') !== 0) {
                list($key, $value) = explode('=', $line, 2);
                $value = trim($value, '"\'');
                $_ENV[trim($key)] = $value;
            }
        }
    }
}

loadEnvConfig();

try {
    $pdo = new PDO(
        "mysql:host=" . ($_ENV['DB_HOST'] ?? 'localhost') . ";dbname=mi_core;charset=utf8mb4",
        $_ENV['DB_USER'] ?? 'v_admin',
        $_ENV['DB_PASSWORD'] ?? '',
        [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
        ]
    );
    
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ\n\n";
    
    // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    echo "üîß –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤...\n";
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Ö
    $products_stmt = $pdo->query("
        SELECT 
            i.sku,
            i.current_stock,
            i.reserved_stock,
            i.source,
            i.stock_type,
            pm.category,
            pm.brand
        FROM inventory_data i
        LEFT JOIN product_master pm ON i.sku = pm.sku_ozon
        LEFT JOIN product_names pn ON i.sku = pn.sku
        WHERE i.current_stock > 0 
        AND i.sku REGEXP '^[0-9]+$'
        AND (pn.product_name IS NULL OR pm.product_name LIKE '–¢–æ–≤–∞—Ä –∞—Ä—Ç–∏–∫—É–ª %')
        ORDER BY i.current_stock DESC
        LIMIT 50
    ");
    
    $products = $products_stmt->fetchAll();
    echo "–ù–∞–π–¥–µ–Ω–æ " . count($products) . " —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è\n\n";
    
    $updated_count = 0;
    
    foreach ($products as $product) {
        $sku = $product['sku'];
        $category = $product['category'] ?? '';
        $brand = $product['brand'] ?? '';
        $stock = $product['current_stock'];
        $reserved = $product['reserved_stock'];
        $source = $product['source'];
        
        // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        $improved_name = '';
        
        if (!empty($brand) && $brand !== '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥') {
            $improved_name = $brand . ' ';
        }
        
        if (!empty($category) && $category !== '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏') {
            $improved_name .= $category . ' ';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
        if ($reserved > 0) {
            $improved_name .= '(–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä) ';
        } elseif ($stock > 100) {
            $improved_name .= '(–¢–æ–≤–∞—Ä –≤ –Ω–∞–ª–∏—á–∏–∏) ';
        }
        
        $improved_name .= "SKU: $sku";
        
        // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç—ã–º, –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        if (empty($brand) && empty($category)) {
            if ($reserved > 0) {
                $improved_name = "–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä (–µ—Å—Ç—å –∑–∞–∫–∞–∑—ã) - SKU: $sku";
            } elseif ($stock > 100) {
                $improved_name = "–¢–æ–≤–∞—Ä —Å –≤—ã—Å–æ–∫–∏–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏ - SKU: $sku";
            } elseif ($stock < 10) {
                $improved_name = "–¢–æ–≤–∞—Ä —Å –Ω–∏–∑–∫–∏–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏ - SKU: $sku";
            } else {
                $improved_name = "–¢–æ–≤–∞—Ä –≤ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ - SKU: $sku";
            }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        try {
            $insert_stmt = $pdo->prepare("
                INSERT INTO product_names (sku, product_name, product_id, source, created_at) 
                VALUES (?, ?, 0, 'improved_logic', NOW())
                ON DUPLICATE KEY UPDATE 
                product_name = VALUES(product_name),
                updated_at = NOW()
            ");
            
            $insert_stmt->execute([$sku, $improved_name]);
            
            echo "‚úÖ SKU $sku: " . substr($improved_name, 0, 60) . (strlen($improved_name) > 60 ? '...' : '') . "\n";
            $updated_count++;
            
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ –¥–ª—è SKU $sku: " . $e->getMessage() . "\n";
        }
    }
    
    echo "\nüéâ –£–ª—É—á—à–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n";
    echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: $updated_count —Ç–æ–≤–∞—Ä–æ–≤\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n";
    $check_stmt = $pdo->query("
        SELECT 
            COUNT(*) as total_with_names,
            COUNT(CASE WHEN pn.source = 'improved_logic' THEN 1 END) as improved_names
        FROM inventory_data i
        LEFT JOIN product_names pn ON i.sku = pn.sku
        WHERE i.current_stock > 0 AND pn.product_name IS NOT NULL
    ");
    $check_result = $check_stmt->fetch();
    
    echo "–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏: " . $check_result['total_with_names'] . "\n";
    echo "–ò–∑ –Ω–∏—Ö —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π: " . $check_result['improved_names'] . "\n";
    
} catch (PDOException $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –ë–î: " . $e->getMessage() . "\n";
} catch (Exception $e) {
    echo "‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}
?>