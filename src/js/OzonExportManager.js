/**
 * OzonExportManager - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ Ozon
 *
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂,
 * –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–∞–º–ø–∞–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö CSV –∏ JSON.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö.
 *
 * @version 1.0
 * @author Manhattan System
 */

class OzonExportManager {
  constructor(apiBaseUrl = "/src/api/ozon-analytics.php") {
    this.apiBaseUrl = apiBaseUrl;
    this.activeExports = new Map();
    this.exportHistory = [];

    // Bind methods
    this.exportData = this.exportData.bind(this);
    this.downloadFile = this.downloadFile.bind(this);
    this.showExportModal = this.showExportModal.bind(this);
    this.hideExportModal = this.hideExportModal.bind(this);

    this.initializeUI();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
   */
  initializeUI() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!document.getElementById("exportModal")) {
      this.createExportModal();
    }

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫ –∫–Ω–æ–ø–∫–∞–º —ç–∫—Å–ø–æ—Ä—Ç–∞
    this.bindExportButtons();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  createExportModal() {
    const modalHtml = `
            <div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exportModalLabel">üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö Ozon</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="exportForm">
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="exportDataType" class="form-label">–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:</label>
                                        <select class="form-control" id="exportDataType" required>
                                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö</option>
                                            <option value="funnel">üìä –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂</option>
                                            <option value="demographics">üë• –î–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ</option>
                                            <option value="campaigns">üì¢ –†–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="exportFormat" class="form-label">–§–æ—Ä–º–∞—Ç:</label>
                                        <select class="form-control" id="exportFormat" required>
                                            <option value="csv">üìÑ CSV (Excel)</option>
                                            <option value="json">üìã JSON</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="exportDateFrom" class="form-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</label>
                                        <input type="date" class="form-control" id="exportDateFrom" required>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="exportDateTo" class="form-label">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</label>
                                        <input type="date" class="form-control" id="exportDateTo" required>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="usePagination">
                                        <label class="form-check-label" for="usePagination">
                                            –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö
                                        </label>
                                    </div>
                                </div>
                                
                                <div id="paginationSettings" style="display: none;">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label for="pageSize" class="form-label">–†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</label>
                                            <select class="form-control" id="pageSize">
                                                <option value="500">500 –∑–∞–ø–∏—Å–µ–π</option>
                                                <option value="1000" selected>1000 –∑–∞–ø–∏—Å–µ–π</option>
                                                <option value="2000">2000 –∑–∞–ø–∏—Å–µ–π</option>
                                                <option value="5000">5000 –∑–∞–ø–∏—Å–µ–π</option>
                                            </select>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="pageNumber" class="form-label">–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</label>
                                            <input type="number" class="form-control" id="pageNumber" value="1" min="1">
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <h6>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</h6>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <label for="exportProductId" class="form-label">ID —Ç–æ–≤–∞—Ä–∞:</label>
                                            <input type="text" class="form-control" id="exportProductId" placeholder="–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ">
                                        </div>
                                        <div class="col-md-4">
                                            <label for="exportCampaignId" class="form-label">ID –∫–∞–º–ø–∞–Ω–∏–∏:</label>
                                            <input type="text" class="form-control" id="exportCampaignId" placeholder="–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ">
                                        </div>
                                        <div class="col-md-4">
                                            <label for="exportRegion" class="form-label">–†–µ–≥–∏–æ–Ω:</label>
                                            <input type="text" class="form-control" id="exportRegion" placeholder="–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ">
                                        </div>
                                    </div>
                                </div>
                            </form>
                            
                            <div id="exportProgress" style="display: none;">
                                <div class="progress mb-3">
                                    <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                                </div>
                                <div class="text-center">
                                    <div class="spinner-border spinner-border-sm me-2" role="status"></div>
                                    <span id="exportStatus">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞...</span>
                                </div>
                            </div>
                            
                            <div id="exportResult" style="display: none;">
                                <div class="alert alert-success">
                                    <h6>‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!</h6>
                                    <div id="exportDetails"></div>
                                    <div class="mt-3">
                                        <button type="button" class="btn btn-success" id="downloadButton">
                                            üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" id="newExportButton">
                                            üîÑ –ù–æ–≤—ã–π —ç–∫—Å–ø–æ—Ä—Ç
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div id="exportError" style="display: none;">
                                <div class="alert alert-danger">
                                    <h6>‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞</h6>
                                    <div id="errorDetails"></div>
                                    <div class="mt-3">
                                        <button type="button" class="btn btn-outline-danger" id="retryExportButton">
                                            üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–û—Ç–º–µ–Ω–∞</button>
                            <button type="button" class="btn btn-primary" id="startExportButton">
                                üì§ –ù–∞—á–∞—Ç—å —ç–∫—Å–ø–æ—Ä—Ç
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

    document.body.insertAdjacentHTML("beforeend", modalHtml);

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    this.bindModalEvents();
  }

  /**
   * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
   */
  bindModalEvents() {
    const modal = document.getElementById("exportModal");
    const usePaginationCheckbox = document.getElementById("usePagination");
    const paginationSettings = document.getElementById("paginationSettings");
    const startExportButton = document.getElementById("startExportButton");
    const downloadButton = document.getElementById("downloadButton");
    const newExportButton = document.getElementById("newExportButton");
    const retryExportButton = document.getElementById("retryExportButton");

    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    usePaginationCheckbox.addEventListener("change", () => {
      paginationSettings.style.display = usePaginationCheckbox.checked
        ? "block"
        : "none";
    });

    // –ù–∞—á–∞—Ç—å —ç–∫—Å–ø–æ—Ä—Ç
    startExportButton.addEventListener("click", () => {
      this.startExport();
    });

    // –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
    downloadButton.addEventListener("click", () => {
      const downloadUrl = downloadButton.dataset.downloadUrl;
      if (downloadUrl) {
        this.downloadFile(downloadUrl);
      }
    });

    // –ù–æ–≤—ã–π —ç–∫—Å–ø–æ—Ä—Ç
    newExportButton.addEventListener("click", () => {
      this.resetExportModal();
    });

    // –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç
    retryExportButton.addEventListener("click", () => {
      this.startExport();
    });

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –¥–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener("show.bs.modal", () => {
      this.setDefaultDates();
    });
  }

  /**
   * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫ –∫–Ω–æ–ø–∫–∞–º —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  bindExportButtons() {
    // –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ –¥–∞—à–±–æ—Ä–¥–µ
    const exportButton = document.getElementById("exportAnalyticsData");
    if (exportButton) {
      exportButton.addEventListener("click", () => {
        this.showExportModal();
      });
    }

    // –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
    const quickExportButtons = document.querySelectorAll("[data-quick-export]");
    quickExportButtons.forEach((button) => {
      button.addEventListener("click", (e) => {
        const dataType = e.target.dataset.quickExport;
        this.quickExport(dataType);
      });
    });
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
   */
  setDefaultDates() {
    const dateFrom = document.getElementById("exportDateFrom");
    const dateTo = document.getElementById("exportDateTo");

    if (!dateFrom.value) {
      dateFrom.value = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)
        .toISOString()
        .split("T")[0];
    }

    if (!dateTo.value) {
      dateTo.value = new Date().toISOString().split("T")[0];
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  showExportModal(dataType = null) {
    const modal = new bootstrap.Modal(document.getElementById("exportModal"));

    if (dataType) {
      document.getElementById("exportDataType").value = dataType;
    }

    this.resetExportModal();
    modal.show();
  }

  /**
   * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  hideExportModal() {
    const modal = bootstrap.Modal.getInstance(
      document.getElementById("exportModal")
    );
    if (modal) {
      modal.hide();
    }
  }

  /**
   * –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
   */
  resetExportModal() {
    document.getElementById("exportProgress").style.display = "none";
    document.getElementById("exportResult").style.display = "none";
    document.getElementById("exportError").style.display = "none";
    document.getElementById("exportForm").style.display = "block";
    document.getElementById("startExportButton").style.display = "inline-block";

    // –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    const progressBar = document.querySelector("#exportProgress .progress-bar");
    progressBar.style.width = "0%";
  }

  /**
   * –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  async startExport() {
    const form = document.getElementById("exportForm");
    const formData = new FormData(form);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    if (!this.validateExportForm()) {
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
    const exportParams = this.getExportParams();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    this.showExportProgress();

    try {
      const result = await this.exportData(exportParams);
      this.handleExportSuccess(result);
    } catch (error) {
      this.handleExportError(error);
    }
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  validateExportForm() {
    const dataType = document.getElementById("exportDataType").value;
    const format = document.getElementById("exportFormat").value;
    const dateFrom = document.getElementById("exportDateFrom").value;
    const dateTo = document.getElementById("exportDateTo").value;

    if (!dataType) {
      this.showError("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞");
      return false;
    }

    if (!format) {
      this.showError("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞");
      return false;
    }

    if (!dateFrom || !dateTo) {
      this.showError("–£–∫–∞–∂–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞");
      return false;
    }

    if (new Date(dateFrom) > new Date(dateTo)) {
      this.showError("–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∫–æ–Ω–µ—á–Ω–æ–π");
      return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω (90 –¥–Ω–µ–π)
    const daysDiff =
      (new Date(dateTo) - new Date(dateFrom)) / (1000 * 60 * 60 * 24);
    if (daysDiff > 90) {
      this.showError("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞: 90 –¥–Ω–µ–π");
      return false;
    }

    return true;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏–∑ —Ñ–æ—Ä–º—ã
   */
  getExportParams() {
    return {
      data_type: document.getElementById("exportDataType").value,
      format: document.getElementById("exportFormat").value,
      date_from: document.getElementById("exportDateFrom").value,
      date_to: document.getElementById("exportDateTo").value,
      use_pagination: document.getElementById("usePagination").checked,
      page: parseInt(document.getElementById("pageNumber").value) || 1,
      page_size: parseInt(document.getElementById("pageSize").value) || 1000,
      product_id: document.getElementById("exportProductId").value || null,
      campaign_id: document.getElementById("exportCampaignId").value || null,
      region: document.getElementById("exportRegion").value || null,
    };
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  showExportProgress() {
    document.getElementById("exportForm").style.display = "none";
    document.getElementById("startExportButton").style.display = "none";
    document.getElementById("exportProgress").style.display = "block";

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    this.animateProgressBar();
  }

  /**
   * –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
   */
  animateProgressBar() {
    const progressBar = document.querySelector("#exportProgress .progress-bar");
    const statusText = document.getElementById("exportStatus");

    let progress = 0;
    const interval = setInterval(() => {
      progress += Math.random() * 15;
      if (progress > 90) {
        progress = 90;
        clearInterval(interval);
      }

      progressBar.style.width = progress + "%";

      if (progress < 30) {
        statusText.textContent = "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API...";
      } else if (progress < 60) {
        statusText.textContent = "–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...";
      } else if (progress < 90) {
        statusText.textContent = "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è...";
      }
    }, 200);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    this.progressInterval = interval;
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
   */
  async exportData(params) {
    const response = await fetch(this.apiBaseUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        action: "export-data",
        ...params,
      }),
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CSV
    const contentType = response.headers.get("content-type");
    if (contentType && contentType.includes("text/csv")) {
      const blob = await response.blob();
      const filename =
        this.getFilenameFromResponse(response) ||
        `ozon_${params.data_type}_export_${
          new Date().toISOString().split("T")[0]
        }.csv`;

      return {
        type: "direct_download",
        blob: blob,
        filename: filename,
      };
    }

    const result = await response.json();

    if (!result.success) {
      throw new Error(result.message || "–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö");
    }

    return result.data;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ—Ç–≤–µ—Ç–∞
   */
  getFilenameFromResponse(response) {
    const contentDisposition = response.headers.get("content-disposition");
    if (contentDisposition) {
      const filenameMatch = contentDisposition.match(/filename="(.+)"/);
      if (filenameMatch) {
        return filenameMatch[1];
      }
    }
    return null;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  handleExportSuccess(result) {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    if (this.progressInterval) {
      clearInterval(this.progressInterval);
    }

    const progressBar = document.querySelector("#exportProgress .progress-bar");
    progressBar.style.width = "100%";
    document.getElementById("exportStatus").textContent = "–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!";

    setTimeout(() => {
      document.getElementById("exportProgress").style.display = "none";
      document.getElementById("exportResult").style.display = "block";

      if (result.type === "direct_download") {
        // –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        this.downloadBlob(result.blob, result.filename);
        document.getElementById("exportDetails").innerHTML = `
                    <p><strong>–§–∞–π–ª:</strong> ${result.filename}</p>
                    <p><strong>–†–∞–∑–º–µ—Ä:</strong> ${this.formatFileSize(
                      result.blob.size
                    )}</p>
                    <p>–§–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä.</p>
                `;
        document.getElementById("downloadButton").style.display = "none";
      } else if (result.download_link) {
        // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
        const downloadButton = document.getElementById("downloadButton");
        downloadButton.dataset.downloadUrl = result.download_link.download_url;

        document.getElementById("exportDetails").innerHTML = `
                    <p><strong>–§–∞–π–ª:</strong> ${
                      result.download_link.filename
                    }</p>
                    <p><strong>–†–∞–∑–º–µ—Ä:</strong> ${this.formatFileSize(
                      result.download_link.file_size
                    )}</p>
                    <p><strong>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</strong> ${new Date(
                      result.download_link.expires_at
                    ).toLocaleString()}</p>
                    ${
                      result.pagination
                        ? `
                        <p><strong>–°—Ç—Ä–∞–Ω–∏—Ü–∞:</strong> ${result.pagination.current_page} –∏–∑ ${result.pagination.total_pages}</p>
                        <p><strong>–ó–∞–ø–∏—Å–µ–π:</strong> ${result.pagination.total_records}</p>
                    `
                        : ""
                    }
                `;
      } else {
        // JSON –¥–∞–Ω–Ω—ã–µ
        const jsonStr = JSON.stringify(result, null, 2);
        const blob = new Blob([jsonStr], { type: "application/json" });
        const filename = `ozon_export_${
          new Date().toISOString().split("T")[0]
        }.json`;

        this.downloadBlob(blob, filename);
        document.getElementById("exportDetails").innerHTML = `
                    <p><strong>–§–æ—Ä–º–∞—Ç:</strong> JSON</p>
                    <p><strong>–ó–∞–ø–∏—Å–µ–π:</strong> ${
                      Array.isArray(result) ? result.length : "N/A"
                    }</p>
                    <p>–§–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä.</p>
                `;
        document.getElementById("downloadButton").style.display = "none";
      }
    }, 1000);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  handleExportError(error) {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    if (this.progressInterval) {
      clearInterval(this.progressInterval);
    }

    document.getElementById("exportProgress").style.display = "none";
    document.getElementById("exportError").style.display = "block";
    document.getElementById("errorDetails").innerHTML = `
            <p><strong>–û—à–∏–±–∫–∞:</strong> ${error.message}</p>
            <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.</p>
        `;

    console.error("Export error:", error);
  }

  /**
   * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ URL
   */
  downloadFile(url) {
    const link = document.createElement("a");
    link.href = url;
    link.style.display = "none";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }

  /**
   * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ blob –∫–∞–∫ —Ñ–∞–π–ª–∞
   */
  downloadBlob(blob, filename) {
    const url = window.URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = filename;
    link.style.display = "none";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    window.URL.revokeObjectURL(url);
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
   */
  formatFileSize(bytes) {
    if (bytes === 0) return "0 Bytes";

    const k = 1024;
    const sizes = ["Bytes", "KB", "MB", "GB"];
    const i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
  }

  /**
   * –ë—ã—Å—Ç—Ä—ã–π —ç–∫—Å–ø–æ—Ä—Ç —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
   */
  async quickExport(dataType, format = "csv") {
    const params = {
      data_type: dataType,
      format: format,
      date_from: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)
        .toISOString()
        .split("T")[0],
      date_to: new Date().toISOString().split("T")[0],
      use_pagination: false,
    };

    try {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      this.showQuickExportProgress(dataType);

      const result = await this.exportData(params);

      if (result.type === "direct_download") {
        this.downloadBlob(result.blob, result.filename);
      } else if (result.download_link) {
        this.downloadFile(result.download_link.download_url);
      }

      this.hideQuickExportProgress();
      this.showSuccessMessage(`–≠–∫—Å–ø–æ—Ä—Ç ${dataType} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
    } catch (error) {
      this.hideQuickExportProgress();
      this.showError(`–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ ${dataType}: ${error.message}`);
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—ã—Å—Ç—Ä–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  showQuickExportProgress(dataType) {
    const button = document.querySelector(`[data-quick-export="${dataType}"]`);
    if (button) {
      button.disabled = true;
      button.innerHTML =
        '<span class="spinner-border spinner-border-sm me-1"></span>–≠–∫—Å–ø–æ—Ä—Ç...';
    }
  }

  /**
   * –°–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—ã—Å—Ç—Ä–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
   */
  hideQuickExportProgress() {
    const buttons = document.querySelectorAll("[data-quick-export]");
    buttons.forEach((button) => {
      button.disabled = false;
      button.innerHTML = button.dataset.originalText || "üì§ –≠–∫—Å–ø–æ—Ä—Ç";
    });
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   */
  showError(message) {
    // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å toast –∏–ª–∏ alert
    if (typeof bootstrap !== "undefined" && bootstrap.Toast) {
      this.showToast(message, "error");
    } else {
      alert("–û—à–∏–±–∫–∞: " + message);
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
   */
  showSuccessMessage(message) {
    if (typeof bootstrap !== "undefined" && bootstrap.Toast) {
      this.showToast(message, "success");
    } else {
      alert(message);
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  showToast(message, type = "info") {
    const toastContainer =
      document.getElementById("toastContainer") || this.createToastContainer();

    const toastId = "toast_" + Date.now();
    const bgClass =
      type === "error"
        ? "bg-danger"
        : type === "success"
        ? "bg-success"
        : "bg-info";

    const toastHtml = `
            <div id="${toastId}" class="toast ${bgClass} text-white" role="alert">
                <div class="toast-header ${bgClass} text-white">
                    <strong class="me-auto">
                        ${
                          type === "error"
                            ? "‚ùå"
                            : type === "success"
                            ? "‚úÖ"
                            : "‚ÑπÔ∏è"
                        } 
                        –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                    </strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            </div>
        `;

    toastContainer.insertAdjacentHTML("beforeend", toastHtml);

    const toastElement = document.getElementById(toastId);
    const toast = new bootstrap.Toast(toastElement);
    toast.show();

    // –£–¥–∞–ª—è–µ–º toast –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è
    toastElement.addEventListener("hidden.bs.toast", () => {
      toastElement.remove();
    });
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  createToastContainer() {
    const container = document.createElement("div");
    container.id = "toastContainer";
    container.className = "toast-container position-fixed top-0 end-0 p-3";
    container.style.zIndex = "9999";
    document.body.appendChild(container);
    return container;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —ç–∫—Å–ø–æ—Ä—Ç–æ–≤
   */
  getExportHistory() {
    return this.exportHistory;
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —ç–∫—Å–ø–æ—Ä—Ç–æ–≤
   */
  clearExportHistory() {
    this.exportHistory = [];
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", function () {
  // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
  if (typeof window.ozonExportManager === "undefined") {
    window.ozonExportManager = new OzonExportManager();
  }
});
