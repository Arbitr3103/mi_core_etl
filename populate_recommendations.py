#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã stock_recommendations –¥–∞–Ω–Ω—ã–º–∏
–Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç–∏
"""

import mysql.connector
from mysql.connector import Error
import os
from datetime import datetime, timedelta

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
    'host': '178.72.129.61',
    'database': 'mi_core_db',
    'user': 'v_admin',
    'password': 'Arbitr09102022!'
}

def get_stock_recommendations():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–ø–∞—Å–æ–≤"""
    connection = None
    try:
        connection = mysql.connector.connect(**DB_CONFIG)
        cursor = connection.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        cursor.execute("SELECT COUNT(*) FROM stock_recommendations")
        existing_count = cursor.fetchone()[0]
        if existing_count > 0:
            print(f"–í —Ç–∞–±–ª–∏—Ü–µ —É–∂–µ –µ—Å—Ç—å {existing_count} –∑–∞–ø–∏—Å–µ–π. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ...")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
        cursor.execute("SHOW COLUMNS FROM inventory")
        columns = cursor.fetchall()
        print("–ö–æ–ª–æ–Ω–∫–∏ inventory:", [col[0] for col in columns])
        
        # –°–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≠—Ç–∞–Ω–æ–≤–æ
        test_data = [
            ('ETN001', '–•–ª–æ–ø—å—è –æ–≤—Å—è–Ω—ã–µ –≠—Ç–∞–Ω–æ–≤–æ 500–≥', 0, 120, 'urgent', '–¢–æ–≤–∞—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ'),
            ('ETN002', '–ú—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è –≠—Ç–∞–Ω–æ–≤–æ 1–∫–≥', 3, 80, 'urgent', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫'),
            ('ETN003', '–ö—Ä—É–ø–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è –≠—Ç–∞–Ω–æ–≤–æ 800–≥', 15, 60, 'normal', '–ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫'),
            ('ETN004', '–ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ –≠—Ç–∞–Ω–æ–≤–æ 1–ª', 2, 100, 'urgent', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫'),
            ('ETN005', '–°–∞—Ö–∞—Ä –≠—Ç–∞–Ω–æ–≤–æ 1–∫–≥', 8, 90, 'normal', '–ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫'),
            ('ETN006', '–†–∏—Å –∫—Ä—É–≥–ª–æ–∑–µ—Ä–Ω—ã–π –≠—Ç–∞–Ω–æ–≤–æ 900–≥', 0, 70, 'urgent', '–¢–æ–≤–∞—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥–µ'),
            ('ETN007', '–ú–∞–∫–∞—Ä–æ–Ω—ã –≠—Ç–∞–Ω–æ–≤–æ —Å–ø–∞–≥–µ—Ç—Ç–∏ 450–≥', 5, 85, 'urgent', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫')
        ]
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        insert_query = """
        INSERT INTO stock_recommendations 
        (product_id, product_name, current_stock, recommended_order_qty, status, reason)
        VALUES (%s, %s, %s, %s, %s, %s)
        """
        
        cursor.executemany(insert_query, test_data)
        connection.commit()
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(test_data)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
        return
        

        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT status, COUNT(*) FROM stock_recommendations GROUP BY status")
        stats = cursor.fetchall()
        
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:")
        for status, count in stats:
            print(f"  {status}: {count}")
        
    except Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        if connection and connection.is_connected():
            cursor.close()
            connection.close()

if __name__ == "__main__":
    print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–ø–∞—Å–æ–≤...")
    get_stock_recommendations()