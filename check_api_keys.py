#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–µ–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π Ozon –∏ WB
"""

import os
import sys
import requests
import json
from datetime import datetime

def load_env_file(env_path='.env'):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    env_vars = {}
    try:
        with open(env_path, 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    env_vars[key.strip()] = value.strip()
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {env_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return env_vars

def check_ozon_api(client_id, api_key):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Ozon API"""
    if not client_id or not api_key:
        return False, "API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    
    headers = {
        'Client-Id': client_id,
        'Api-Key': api_key,
        'Content-Type': 'application/json'
    }
    
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Ozon API - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        response = requests.post(
            'https://api-seller.ozon.ru/v2/product/list',
            headers=headers,
            json={
                'filter': {},
                'limit': 1,
                'last_id': '',
                'sort_dir': 'ASC'
            },
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            if 'result' in data:
                return True, f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ. –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(data.get('result', {}).get('items', []))}"
            else:
                return False, f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {response.text[:200]}"
        else:
            return False, f"HTTP {response.status_code}: {response.text[:200]}"
            
    except requests.exceptions.Timeout:
        return False, "–¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Ozon API"
    except requests.exceptions.RequestException as e:
        return False, f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}"
    except Exception as e:
        return False, f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

def check_wb_api(api_key):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Wildberries API"""
    if not api_key:
        return False, "API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    
    headers = {
        'Authorization': api_key,
        'Content-Type': 'application/json'
    }
    
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ WB API - –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤
        response = requests.get(
            'https://suppliers-api.wildberries.ru/api/v3/stocks',
            headers=headers,
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            if isinstance(data, list):
                return True, f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ. –ù–∞–π–¥–µ–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤: {len(data)}"
            else:
                return True, "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
        elif response.status_code == 401:
            return False, "–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á (401 Unauthorized)"
        elif response.status_code == 403:
            return False, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (403 Forbidden)"
        else:
            return False, f"HTTP {response.status_code}: {response.text[:200]}"
            
    except requests.exceptions.Timeout:
        return False, "–¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WB API"
    except requests.exceptions.RequestException as e:
        return False, f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}"
    except Exception as e:
        return False, f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_vars = load_env_file()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Ozon API
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Ozon API...")
    ozon_client_id = env_vars.get('OZON_CLIENT_ID', os.getenv('OZON_CLIENT_ID'))
    ozon_api_key = env_vars.get('OZON_API_KEY', os.getenv('OZON_API_KEY'))
    
    ozon_success, ozon_message = check_ozon_api(ozon_client_id, ozon_api_key)
    print(f"   {'‚úÖ' if ozon_success else '‚ùå'} Ozon: {ozon_message}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º WB API
    print("\nüõí –ü—Ä–æ–≤–µ—Ä–∫–∞ Wildberries API...")
    wb_api_key = env_vars.get('WB_API_KEY', os.getenv('WB_API_KEY'))
    
    wb_success, wb_message = check_wb_api(wb_api_key)
    print(f"   {'‚úÖ' if wb_success else '‚ùå'} WB: {wb_message}")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    if ozon_success and wb_success:
        print("‚úÖ –í—Å–µ API –∫–ª—é—á–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("üöÄ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        return True
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å API –∫–ª—é—á–∞–º–∏")
        print("üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π")
        
        if not ozon_success:
            print(f"   - –ò—Å–ø—Ä–∞–≤–∏—Ç—å Ozon API: {ozon_message}")
        if not wb_success:
            print(f"   - –ò—Å–ø—Ä–∞–≤–∏—Ç—å WB API: {wb_message}")
        
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)