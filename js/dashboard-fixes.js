/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ v4
 */

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ "Cannot set properties of null"
function safeSetInnerHTML(elementId, content) {
    const element = document.getElementById(elementId);
    if (element) {
        element.innerHTML = content;
        return true;
    } else {
        console.warn(`Element with ID "${elementId}" not found`);
        return false;
    }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
async function loadSyncStats() {
    try {
        console.log("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...");
        
        const response = await fetch("/api/sync-stats.php");
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        safeSetInnerHTML("sync-status", data.status || "unknown");
        safeSetInnerHTML("processed-records", data.processed_records || 0);
        safeSetInnerHTML("inserted-records", data.inserted_records || 0);
        safeSetInnerHTML("sync-errors", data.errors || 0);
        safeSetInnerHTML("execution-time", data.execution_time || 0);
        safeSetInnerHTML("api-requests", data.api_requests || 0);
        
        console.log("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
        return data;
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:", error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        safeSetInnerHTML("sync-status", "error");
        safeSetInnerHTML("processed-records", "N/A");
        safeSetInnerHTML("inserted-records", "N/A");
        safeSetInnerHTML("sync-errors", "N/A");
        safeSetInnerHTML("execution-time", "N/A");
        safeSetInnerHTML("api-requests", "N/A");
        
        return null;
    }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
async function loadAnalytics() {
    try {
        console.log("üìä –ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...");
        
        const response = await fetch("/api/analytics.php");
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        safeSetInnerHTML("total-products", data.total_products || 0);
        safeSetInnerHTML("products-with-names", data.products_with_names || 0);
        safeSetInnerHTML("data-quality-score", (data.data_quality_score || 0) + "%");
        safeSetInnerHTML("critical-stock", data.critical_stock_items || 0);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        const qualityBar = document.getElementById("quality-progress-bar");
        if (qualityBar) {
            qualityBar.style.width = (data.data_quality_score || 0) + "%";
        }
        
        console.log("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
        return data;
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:", error);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–π
async function fixMissingProductNames() {
    try {
        console.log("üîß –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–π...");
        
        const response = await fetch("/api/fix-product-names.php", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            }
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();
        
        console.log("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:", result);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        await loadAnalytics();
        
        return result;
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:", error);
        return null;
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", function() {
    console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞...");
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    loadSyncStats();
    loadAnalytics();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(() => {
        loadSyncStats();
        loadAnalytics();
    }, 30000);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const fixButton = document.getElementById("fix-products-btn");
    if (!fixButton) {
        const button = document.createElement("button");
        button.id = "fix-products-btn";
        button.className = "btn btn-warning";
        button.innerHTML = "üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–π";
        button.onclick = fixMissingProductNames;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ
        const container = document.querySelector(".dashboard-controls") || document.body;
        container.appendChild(button);
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.dashboardFixes = {
    loadSyncStats,
    loadAnalytics,
    fixMissingProductNames,
    safeSetInnerHTML
};