{"version":3,"file":"ui-CRQylcxt.js","sources":["../../../src/components/ui/LoadingSpinner.tsx","../../../src/components/ui/ErrorMessage.tsx","../../../src/components/ui/Button.tsx"],"sourcesContent":["import React from \"react\";\n\nexport interface LoadingSpinnerProps {\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  className?: string;\n  text?: string;\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = React.memo(\n  ({ size = \"md\", className = \"\", text }) => {\n    const sizeStyles = {\n      sm: \"h-4 w-4\",\n      md: \"h-8 w-8\",\n      lg: \"h-12 w-12\",\n      xl: \"h-16 w-16\",\n    };\n\n    return (\n      <div className={`flex flex-col items-center justify-center ${className}`}>\n        <svg\n          className={`animate-spin text-primary-600 ${sizeStyles[size]}`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n        {text && <p className=\"mt-2 text-sm text-gray-600\">{text}</p>}\n      </div>\n    );\n  }\n);\n","import React from \"react\";\n\nexport interface ErrorMessageProps {\n  error: Error | string;\n  title?: string;\n  onRetry?: () => void;\n  className?: string;\n  showDetails?: boolean;\n}\n\nexport const ErrorMessage: React.FC<ErrorMessageProps> = ({\n  error,\n  title = \"Произошла ошибка\",\n  onRetry,\n  className = \"\",\n  showDetails = false,\n}) => {\n  const errorMessage = typeof error === \"string\" ? error : error.message;\n  const statusCode =\n    typeof error !== \"string\" && \"statusCode\" in error\n      ? (error as { statusCode?: number }).statusCode\n      : undefined;\n\n  // Determine user-friendly message based on status code\n  const getUserFriendlyMessage = () => {\n    if (statusCode === 404) {\n      return \"Запрашиваемые данные не найдены\";\n    }\n    if (statusCode === 403) {\n      return \"У вас нет доступа к этим данным\";\n    }\n    if (statusCode === 401) {\n      return \"Требуется авторизация\";\n    }\n    if (statusCode && statusCode >= 500) {\n      return \"Ошибка сервера. Пожалуйста, попробуйте позже\";\n    }\n    if (statusCode === 408) {\n      return \"Превышено время ожидания ответа от сервера\";\n    }\n    if (!statusCode) {\n      return \"Ошибка подключения к серверу\";\n    }\n    return errorMessage;\n  };\n\n  return (\n    <div\n      className={`bg-red-50 border border-red-200 rounded-lg p-6 ${className}`}\n    >\n      <div className=\"flex items-start\">\n        <div className=\"flex-shrink-0\">\n          <svg\n            className=\"h-6 w-6 text-red-600\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n        <div className=\"ml-3 flex-1\">\n          <h3 className=\"text-sm font-medium text-red-800\">{title}</h3>\n          <div className=\"mt-2 text-sm text-red-700\">\n            <p>{getUserFriendlyMessage()}</p>\n            {showDetails && statusCode && (\n              <p className=\"mt-1 text-xs text-red-600\">\n                Код ошибки: {statusCode}\n              </p>\n            )}\n          </div>\n          {onRetry && (\n            <div className=\"mt-4\">\n              <button\n                type=\"button\"\n                onClick={onRetry}\n                className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\n              >\n                <svg\n                  className=\"mr-2 h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  />\n                </svg>\n                Попробовать снова\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"primary\" | \"secondary\" | \"danger\" | \"ghost\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  isLoading?: boolean;\n  children: React.ReactNode;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant = \"primary\",\n  size = \"md\",\n  isLoading = false,\n  disabled,\n  className = \"\",\n  children,\n  ...props\n}) => {\n  const baseStyles =\n    \"inline-flex items-center justify-center font-medium rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\";\n\n  const variantStyles = {\n    primary:\n      \"bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500\",\n    secondary:\n      \"bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-500\",\n    danger: \"bg-red-600 text-white hover:bg-red-700 focus:ring-red-500\",\n    ghost: \"bg-transparent text-gray-700 hover:bg-gray-100 focus:ring-gray-500\",\n  };\n\n  const sizeStyles = {\n    sm: \"px-3 py-1.5 text-sm\",\n    md: \"px-4 py-2 text-base\",\n    lg: \"px-6 py-3 text-lg\",\n  };\n\n  return (\n    <button\n      className={`${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading ? (\n        <>\n          <svg\n            className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n          Загрузка...\n        </>\n      ) : (\n        children\n      )}\n    </button>\n  );\n};\n"],"names":["LoadingSpinner","React","size","className","text","sizeStyles","jsxs","jsx","ErrorMessage","error","title","onRetry","showDetails","errorMessage","statusCode","getUserFriendlyMessage","Button","variant","isLoading","disabled","children","props","baseStyles","variantStyles","Fragment"],"mappings":"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"}