<?php
/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç SQL –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
 */

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
function loadEnvConfig() {
    $envFile = __DIR__ . '/.env';
    if (file_exists($envFile)) {
        $lines = file($envFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
        foreach ($lines as $line) {
            if (strpos($line, '=') !== false && strpos($line, '#') !== 0) {
                list($key, $value) = explode('=', $line, 2);
                $value = trim($value, '"\'');
                $_ENV[trim($key)] = $value;
            }
        }
    }
}

loadEnvConfig();

try {
    $pdo = new PDO(
        "mysql:host=" . ($_ENV['DB_HOST'] ?? 'localhost') . ";dbname=mi_core;charset=utf8mb4",
        $_ENV['DB_USER'] ?? 'v_admin',
        $_ENV['DB_PASSWORD'] ?? 'nEw_pAsS_f0r_vAdmin_!2025',
        [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
        ]
    );
    
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ\n\n";
    
    // –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É—é—â–∏—Ö –≤–Ω–∏–º–∞–Ω–∏—è (–∫–∞–∫ –≤ API)
    echo "üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É—é—â–∏—Ö –≤–Ω–∏–º–∞–Ω–∏—è:\n";
    
    $attention_stmt = $pdo->query("
        SELECT 
            i.sku,
            CASE
                WHEN pm.product_name IS NOT NULL AND pm.product_name NOT LIKE '–¢–æ–≤–∞—Ä –∞—Ä—Ç–∏–∫—É–ª %' THEN pm.product_name
                WHEN pn.product_name IS NOT NULL THEN pn.product_name
                WHEN i.sku REGEXP '^[0-9]+$' THEN CONCAT('–¢–æ–≤–∞—Ä –∞—Ä—Ç–∏–∫—É–ª ', i.sku)
                WHEN LENGTH(i.sku) > 50 THEN CONCAT(SUBSTRING(i.sku, 1, 47), '...')
                ELSE i.sku
            END as product_name,
            COALESCE(pm.brand, '–ë–µ–∑ –±—Ä–µ–Ω–¥–∞') as brand,
            COALESCE(pm.category, '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏') as category,
            SUM(i.current_stock) as total_stock,
            SUM(i.reserved_stock) as total_reserved,
            CASE 
                WHEN SUM(i.current_stock) > 200 AND SUM(i.reserved_stock) = 0 THEN '–ò–∑–±—ã—Ç–æ–∫ –±–µ–∑ —Å–ø—Ä–æ—Å–∞'
                WHEN SUM(i.current_stock) < 5 AND SUM(i.reserved_stock) > 0 THEN '–í—ã—Å–æ–∫–∏–π —Å–ø—Ä–æ—Å, –º–∞–ª–æ —Ç–æ–≤–∞—Ä–∞'
                WHEN SUM(i.current_stock) BETWEEN 5 AND 15 AND SUM(i.reserved_stock) > 0 THEN '–ù—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'
                ELSE '–¢—Ä–µ–±—É–µ—Ç –∞–Ω–∞–ª–∏–∑–∞'
            END as marketing_action
        FROM inventory_data i
        LEFT JOIN product_master pm ON i.sku = pm.sku_ozon
        LEFT JOIN product_names pn ON i.sku = pn.sku
        WHERE i.current_stock > 0
        AND (
            (i.current_stock > 200 AND i.reserved_stock = 0) OR
            (i.current_stock < 15 AND i.reserved_stock > 0) OR
            (i.current_stock < 5)
        )
        GROUP BY i.sku, pm.product_name, pm.brand, pm.category, pn.product_name
        ORDER BY 
            CASE 
                WHEN SUM(i.current_stock) < 5 AND SUM(i.reserved_stock) > 0 THEN 1
                WHEN SUM(i.current_stock) BETWEEN 5 AND 15 AND SUM(i.reserved_stock) > 0 THEN 2
                WHEN SUM(i.current_stock) > 200 AND SUM(i.reserved_stock) = 0 THEN 3
                ELSE 4
            END,
            total_stock DESC
        LIMIT 5
    ");
    
    $attention_products = $attention_stmt->fetchAll();
    
    echo "–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É—é—â–∏—Ö –≤–Ω–∏–º–∞–Ω–∏—è: " . count($attention_products) . "\n";
    foreach ($attention_products as $product) {
        echo "  - " . $product['product_name'] . "\n";
        echo "    SKU: " . $product['sku'] . ", –ë—Ä–µ–Ω–¥: " . $product['brand'] . "\n";
        echo "    –û—Å—Ç–∞—Ç–æ–∫: " . $product['total_stock'] . ", –†–µ–∑–µ—Ä–≤: " . $product['total_reserved'] . "\n";
        echo "    –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: " . $product['marketing_action'] . "\n\n";
    }
    
    // –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤
    echo "üèÜ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤:\n";
    
    $top_stmt = $pdo->query("
        SELECT 
            i.sku,
            CASE
                WHEN pm.product_name IS NOT NULL AND pm.product_name NOT LIKE '–¢–æ–≤–∞—Ä –∞—Ä—Ç–∏–∫—É–ª %' THEN pm.product_name
                WHEN pn.product_name IS NOT NULL THEN pn.product_name
                WHEN i.sku REGEXP '^[0-9]+$' THEN CONCAT('–¢–æ–≤–∞—Ä –∞—Ä—Ç–∏–∫—É–ª ', i.sku)
                WHEN LENGTH(i.sku) > 50 THEN CONCAT(SUBSTRING(i.sku, 1, 47), '...')
                ELSE i.sku
            END as product_name,
            COALESCE(pm.brand, '–ë–µ–∑ –±—Ä–µ–Ω–¥–∞') as brand,
            SUM(i.current_stock) as total_stock,
            SUM(i.reserved_stock) as total_reserved
        FROM inventory_data i
        LEFT JOIN product_master pm ON i.sku = pm.sku_ozon
        LEFT JOIN product_names pn ON i.sku = pn.sku
        WHERE i.current_stock > 0
        GROUP BY i.sku, pm.product_name, pm.brand, pm.category, pn.product_name
        ORDER BY total_stock DESC
        LIMIT 5
    ");
    
    $top_products = $top_stmt->fetchAll();
    
    echo "–¢–æ–ø —Ç–æ–≤–∞—Ä—ã –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º:\n";
    foreach ($top_products as $product) {
        echo "  - " . $product['product_name'] . "\n";
        echo "    SKU: " . $product['sku'] . ", –ë—Ä–µ–Ω–¥: " . $product['brand'] . "\n";
        echo "    –û—Å—Ç–∞—Ç–æ–∫: " . $product['total_stock'] . ", –†–µ–∑–µ—Ä–≤: " . $product['total_reserved'] . "\n\n";
    }
    
    echo "üéâ –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n";
    
} catch (PDOException $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –ë–î: " . $e->getMessage() . "\n";
} catch (Exception $e) {
    echo "‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}
?>