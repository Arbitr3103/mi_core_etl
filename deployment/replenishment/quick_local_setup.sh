#!/bin/bash

# ============================================================================
# –ë–´–°–¢–†–û–ï –õ–û–ö–ê–õ–¨–ù–û–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
# ============================================================================
# –û–ø–∏—Å–∞–Ω–∏–µ: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
# –í–µ—Ä—Å–∏—è: 1.0.0
# –î–∞—Ç–∞: 2025-10-17
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick_local_setup.sh
# ============================================================================

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"
DB_USER="replenishment_user"
DB_PASSWORD="secure_password_123"
DB_NAME="mi_core"
WEB_PORT="8080"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# ============================================================================
# –§–£–ù–ö–¶–ò–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
# ============================================================================

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[$(date +'%H:%M:%S')] –û–®–ò–ë–ö–ê:${NC} $1"
}

warning() {
    echo -e "${YELLOW}[$(date +'%H:%M:%S')] –í–ù–ò–ú–ê–ù–ò–ï:${NC} $1"
}

info() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')] –ò–ù–§–û:${NC} $1"
}

success() {
    echo -e "${PURPLE}[$(date +'%H:%M:%S')] –£–°–ü–ï–•:${NC} $1"
}

print_header() {
    echo -e "${PURPLE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                                                                ‚ïë"
    echo "‚ïë        üöÄ –ë–´–°–¢–†–û–ï –õ–û–ö–ê–õ–¨–ù–û–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï üöÄ                  ‚ïë"
    echo "‚ïë           –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è                     ‚ïë"
    echo "‚ïë                                                                ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# ============================================================================
# –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –¢–†–ï–ë–û–í–ê–ù–ò–ô
# ============================================================================

check_requirements() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP
    if ! command -v php &> /dev/null; then
        error "PHP –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PHP 7.4 –∏–ª–∏ –≤—ã—à–µ."
        exit 1
    fi
    
    local php_version=$(php -v | head -n1 | cut -d' ' -f2 | cut -d'.' -f1,2)
    log "‚úì PHP –≤–µ—Ä—Å–∏—è: $php_version"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
    if ! command -v mysql &> /dev/null; then
        error "MySQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MySQL 5.7 –∏–ª–∏ –≤—ã—à–µ."
        exit 1
    fi
    
    log "‚úì MySQL –¥–æ—Å—Ç—É–ø–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    local required_extensions=("pdo" "pdo_mysql" "json" "mbstring")
    for ext in "${required_extensions[@]}"; do
        if ! php -m | grep -q "^$ext$"; then
            error "PHP —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ $ext –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
            exit 1
        fi
        log "‚úì PHP —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: $ext"
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    if command -v nginx &> /dev/null; then
        log "‚úì Nginx –¥–æ—Å—Ç—É–ø–µ–Ω"
        WEB_SERVER="nginx"
    elif command -v apache2 &> /dev/null; then
        log "‚úì Apache –¥–æ—Å—Ç—É–ø–µ–Ω"
        WEB_SERVER="apache"
    else
        warning "–í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π PHP —Å–µ—Ä–≤–µ—Ä."
        WEB_SERVER="php"
    fi
}

# ============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•
# ============================================================================

setup_database() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL
    if ! mysql -u root -e "SELECT 1;" &> /dev/null; then
        error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MySQL –∫–∞–∫ root. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
        info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: mysql -u root -p"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if ! mysql -u root -e "USE $DB_NAME;" &> /dev/null; then
        error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $DB_NAME –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –µ—ë —Å–Ω–∞—á–∞–ª–∞."
        info "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: CREATE DATABASE $DB_NAME;"
        exit 1
    fi
    
    log "‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $DB_NAME —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    mysql -u root -e "
        CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASSWORD';
        GRANT SELECT, INSERT, UPDATE, DELETE ON $DB_NAME.* TO '$DB_USER'@'localhost';
        GRANT CREATE, DROP, ALTER ON $DB_NAME.replenishment_* TO '$DB_USER'@'localhost';
        GRANT EXECUTE ON $DB_NAME.* TO '$DB_USER'@'localhost';
        FLUSH PRIVILEGES;
    " 2>/dev/null || {
        warning "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è"
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if mysql -u "$DB_USER" -p"$DB_PASSWORD" -e "USE $DB_NAME;" &> /dev/null; then
        log "‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $DB_USER —Å–æ–∑–¥–∞–Ω –∏ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è"
    else
        error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–∞–∫ $DB_USER"
        exit 1
    fi
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    log "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    local migration_file="$SCRIPT_DIR/migrate_replenishment_system.sql"
    if [ ! -f "$migration_file" ]; then
        error "–§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $migration_file"
        exit 1
    fi
    
    if mysql -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" < "$migration_file"; then
        log "‚úì –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
    local table_count=$(mysql -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "SHOW TABLES LIKE 'replenishment_%';" | tail -n +2 | wc -l)
    log "‚úì –°–æ–∑–¥–∞–Ω–æ —Ç–∞–±–ª–∏—Ü: $table_count"
}

# ============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# ============================================================================

setup_configuration() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local config_file="$PROJECT_ROOT/config_replenishment.php"
    
    cat > "$config_file" << EOF
<?php
/**
 * –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: $(date)
 */

// ============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•
// ============================================================================

define('DB_HOST', 'localhost');
define('DB_NAME', '$DB_NAME');
define('DB_USER', '$DB_USER');
define('DB_PASSWORD', '$DB_PASSWORD');
define('DB_PORT', 3306);
define('DB_CHARSET', 'utf8mb4');

define('DB_OPTIONS', [
    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
    PDO::ATTR_EMULATE_PREPARES => false,
    PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci"
]);

// ============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´ –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
// ============================================================================

define('REPLENISHMENT_ENABLED', true);
define('REPLENISHMENT_DEBUG', true);
define('REPLENISHMENT_LOG_LEVEL', 'debug');

define('REPLENISHMENT_MEMORY_LIMIT', '256M');
define('REPLENISHMENT_MAX_EXECUTION_TIME', 300);
define('REPLENISHMENT_BATCH_SIZE', 50);

// ============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ò EMAIL (–û–¢–ö–õ–Æ–ß–ï–ù–´ –î–õ–Ø –õ–û–ö–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø)
// ============================================================================

define('EMAIL_REPORTS_ENABLED', false);
define('SMTP_ENABLED', false);

// ============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ò API (–£–ü–†–û–©–ï–ù–´ –î–õ–Ø –õ–û–ö–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø)
// ============================================================================

define('API_ENABLED', true);
define('API_DEBUG', true);
define('API_KEY_REQUIRED', false);
define('API_RATE_LIMIT', 1000);

// ============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
// ============================================================================

define('LOG_DIR', __DIR__ . '/logs/replenishment');
define('LOG_FILE_CALCULATION', LOG_DIR . '/calculation.log');
define('LOG_FILE_ERROR', LOG_DIR . '/error.log');
define('LOG_FILE_API', LOG_DIR . '/api.log');

// ============================================================================
// –ù–ê–°–¢–†–û–ô–ö–ò –û–ö–†–£–ñ–ï–ù–ò–Ø
// ============================================================================

define('ENVIRONMENT', 'development');
define('DEBUG_MODE', true);

error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('log_errors', 1);

ini_set('memory_limit', REPLENISHMENT_MEMORY_LIMIT);
ini_set('max_execution_time', REPLENISHMENT_MAX_EXECUTION_TIME);

date_default_timezone_set('Europe/Moscow');

// ============================================================================
// –ü–ê–†–ê–ú–ï–¢–†–´ –†–ê–°–ß–ï–¢–ê –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ
// ============================================================================

define('DEFAULT_REPLENISHMENT_DAYS', 14);
define('DEFAULT_SAFETY_DAYS', 7);
define('DEFAULT_ANALYSIS_DAYS', 30);
define('DEFAULT_MIN_ADS_THRESHOLD', 0.1);
define('DEFAULT_MAX_RECOMMENDATION_QUANTITY', 10000);

// ============================================================================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================================================

function getDbConnection() {
    static \$pdo = null;
    
    if (\$pdo === null) {
        \$dsn = sprintf(
            'mysql:host=%s;port=%d;dbname=%s;charset=%s',
            DB_HOST,
            DB_PORT,
            DB_NAME,
            DB_CHARSET
        );
        
        \$pdo = new PDO(\$dsn, DB_USER, DB_PASSWORD, DB_OPTIONS);
    }
    
    return \$pdo;
}

function logMessage(\$message, \$level = 'info', \$file = null) {
    \$file = \$file ?: LOG_FILE_CALCULATION;
    \$timestamp = date('Y-m-d H:i:s');
    \$logEntry = "[\$timestamp] [\$level] \$message" . PHP_EOL;
    
    \$logDir = dirname(\$file);
    if (!is_dir(\$logDir)) {
        mkdir(\$logDir, 0755, true);
    }
    
    file_put_contents(\$file, \$logEntry, FILE_APPEND | LOCK_EX);
    
    if (DEBUG_MODE) {
        echo \$logEntry;
    }
}

function getConfigParameter(\$name, \$default = null) {
    static \$cache = [];
    
    if (isset(\$cache[\$name])) {
        return \$cache[\$name];
    }
    
    try {
        \$pdo = getDbConnection();
        \$stmt = \$pdo->prepare("
            SELECT parameter_value, parameter_type 
            FROM replenishment_config 
            WHERE parameter_name = ? AND is_active = 1
        ");
        \$stmt->execute([\$name]);
        \$result = \$stmt->fetch();
        
        if (\$result) {
            \$value = \$result['parameter_value'];
            
            switch (\$result['parameter_type']) {
                case 'int':
                    \$value = (int)\$value;
                    break;
                case 'float':
                    \$value = (float)\$value;
                    break;
                case 'boolean':
                    \$value = \$value === 'true';
                    break;
            }
            
            \$cache[\$name] = \$value;
            return \$value;
        }
    } catch (Exception \$e) {
        logMessage("Failed to get config parameter \$name: " . \$e->getMessage(), 'error');
    }
    
    return \$default;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
if (!is_dir(LOG_DIR)) {
    mkdir(LOG_DIR, 0755, true);
}

logMessage("–õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞", 'debug');

?>
EOF

    log "‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $config_file"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p "$PROJECT_ROOT/logs/replenishment"
    chmod 755 "$PROJECT_ROOT/logs/replenishment"
    
    log "‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞"
}

# ============================================================================
# –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•
# ============================================================================

check_data() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü
    local required_tables=("fact_orders" "inventory_data" "dim_products")
    
    for table in "${required_tables[@]}"; do
        local count=$(mysql -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "SELECT COUNT(*) FROM $table;" 2>/dev/null | tail -n 1)
        if [ "$count" -gt 0 ]; then
            log "‚úì –¢–∞–±–ª–∏—Ü–∞ $table: $count –∑–∞–ø–∏—Å–µ–π"
        else
            warning "–¢–∞–±–ª–∏—Ü–∞ $table –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    local recent_orders=$(mysql -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" -e "
        SELECT COUNT(*) FROM fact_orders 
        WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
    " 2>/dev/null | tail -n 1)
    
    if [ "$recent_orders" -gt 0 ]; then
        log "‚úì –ó–∞–∫–∞–∑–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: $recent_orders"
    else
        warning "–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω—ã–º–∏."
        
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        echo -n "–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ? (y/N): "
        read -r create_test_data
        
        if [ "$create_test_data" = "y" ] || [ "$create_test_data" = "Y" ]; then
            create_test_data
        fi
    fi
}

# ============================================================================
# –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•
# ============================================================================

create_test_data() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
    
    mysql -u "$DB_USER" -p"$DB_PASSWORD" "$DB_NAME" << 'EOF'
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
INSERT IGNORE INTO dim_products (id, name, sku_ozon, is_active) VALUES
(1001, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 1', 'TEST-001', 1),
(1002, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 2', 'TEST-002', 1),
(1003, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 3', 'TEST-003', 1),
(1004, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 4', 'TEST-004', 1),
(1005, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 5', 'TEST-005', 1),
(1006, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 6', 'TEST-006', 1),
(1007, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 7', 'TEST-007', 1),
(1008, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 8', 'TEST-008', 1),
(1009, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 9', 'TEST-009', 1),
(1010, '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 10', 'TEST-010', 1);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥–∞–∂ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
SET @start_date = DATE_SUB(CURDATE(), INTERVAL 30 DAY);

INSERT IGNORE INTO fact_orders (product_id, order_date, qty, transaction_type)
SELECT 
    product_id,
    DATE_ADD(@start_date, INTERVAL day_offset DAY) as order_date,
    FLOOR(RAND() * 5) + 1 as qty,
    'sale' as transaction_type
FROM (
    SELECT 1001 as product_id UNION SELECT 1002 UNION SELECT 1003 UNION SELECT 1004 UNION SELECT 1005
    UNION SELECT 1006 UNION SELECT 1007 UNION SELECT 1008 UNION SELECT 1009 UNION SELECT 1010
) products
CROSS JOIN (
    SELECT 0 as day_offset UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5
    UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11
    UNION SELECT 12 UNION SELECT 13 UNION SELECT 14 UNION SELECT 15 UNION SELECT 16 UNION SELECT 17
    UNION SELECT 18 UNION SELECT 19 UNION SELECT 20 UNION SELECT 21 UNION SELECT 22 UNION SELECT 23
    UNION SELECT 24 UNION SELECT 25 UNION SELECT 26 UNION SELECT 27 UNION SELECT 28 UNION SELECT 29
) days
WHERE RAND() > 0.3; -- 70% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–µ–Ω—å

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∞—Å–æ–≤
INSERT INTO inventory_data (product_id, current_stock, available_stock, warehouse_name, created_at)
SELECT 
    product_id,
    FLOOR(RAND() * 100) + 10 as current_stock,
    FLOOR(RAND() * 100) + 10 as available_stock,
    '–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫–ª–∞–¥' as warehouse_name,
    NOW() as created_at
FROM (
    SELECT 1001 as product_id UNION SELECT 1002 UNION SELECT 1003 UNION SELECT 1004 UNION SELECT 1005
    UNION SELECT 1006 UNION SELECT 1007 UNION SELECT 1008 UNION SELECT 1009 UNION SELECT 1010
) products
ON DUPLICATE KEY UPDATE 
    current_stock = VALUES(current_stock),
    available_stock = VALUES(available_stock),
    created_at = VALUES(created_at);
EOF

    log "‚úì –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã"
}

# ============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –í–ï–ë-–°–ï–†–í–ï–†–ê
# ============================================================================

setup_web_server() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞..."
    
    case "$WEB_SERVER" in
        "nginx")
            setup_nginx
            ;;
        "apache")
            setup_apache
            ;;
        "php")
            setup_php_server
            ;;
    esac
}

setup_nginx() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    
    local config_file="/tmp/replenishment-local-$$.conf"
    
    cat > "$config_file" << EOF
server {
    listen $WEB_PORT;
    server_name localhost;
    root $PROJECT_ROOT;
    index index.php;
    
    # API endpoint
    location ~ ^/api/replenishment\.php$ {
        try_files \$uri =404;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_read_timeout 300s;
    }
    
    # Dashboard
    location ~ ^/html/.*\.php$ {
        try_files \$uri =404;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }
    
    # Test scripts
    location ~ ^/test_.*\.php$ {
        try_files \$uri =404;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }
    
    # General PHP processing
    location ~ \.php$ {
        try_files \$uri =404;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }
    
    # Static files
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1h;
        add_header Cache-Control "public";
    }
}
EOF

    info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx —Å–æ–∑–¥–∞–Ω–∞: $config_file"
    info "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    info "  sudo cp $config_file /etc/nginx/sites-available/replenishment-local"
    info "  sudo ln -s /etc/nginx/sites-available/replenishment-local /etc/nginx/sites-enabled/"
    info "  sudo nginx -t && sudo systemctl reload nginx"
    
    WEB_URL="http://localhost:$WEB_PORT"
}

setup_php_server() {
    log "–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π PHP —Å–µ—Ä–≤–µ—Ä..."
    
    WEB_URL="http://localhost:$WEB_PORT"
    
    info "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    info "  cd $PROJECT_ROOT"
    info "  php -S localhost:$WEB_PORT"
}

# ============================================================================
# –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –°–ö–†–ò–ü–¢–û–í
# ============================================================================

create_test_scripts() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    cat > "$PROJECT_ROOT/test_connection.php" << 'EOF'
<?php
require_once 'config_replenishment.php';

echo "=== –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø ===\n";

try {
    $pdo = getDbConnection();
    echo "‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ\n";
    
    $stmt = $pdo->query("SELECT COUNT(*) FROM replenishment_config");
    $config_count = $stmt->fetchColumn();
    echo "‚úì –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $config_count\n";
    
    $stmt = $pdo->query("SELECT COUNT(*) FROM fact_orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)");
    $orders_count = $stmt->fetchColumn();
    echo "‚úì –ó–∞–∫–∞–∑–æ–≤ –∑–∞ 30 –¥–Ω–µ–π: $orders_count\n";
    
    $stmt = $pdo->query("SELECT COUNT(*) FROM inventory_data");
    $inventory_count = $stmt->fetchColumn();
    echo "‚úì –ó–∞–ø–∏—Å–µ–π –∑–∞–ø–∞—Å–æ–≤: $inventory_count\n";
    
    echo "\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!\n";
    
} catch (Exception $e) {
    echo "‚úó –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}
?>
EOF

    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞
    cat > "$PROJECT_ROOT/test_quick_calculation.php" << 'EOF'
<?php
require_once 'config_replenishment.php';
require_once 'src/Replenishment/ReplenishmentRecommender.php';

echo "=== –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –†–ê–°–ß–ï–¢–ê ===\n";

try {
    $recommender = new ReplenishmentRecommender();
    
    echo "–ó–∞–ø—É—Å–∫ —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...\n";
    $start_time = microtime(true);
    
    $result = $recommender->calculateRecommendations();
    
    $execution_time = microtime(true) - $start_time;
    
    echo "–†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ " . round($execution_time, 2) . " —Å–µ–∫—É–Ω–¥\n";
    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç: " . ($result ? "‚úì –£—Å–ø–µ—à–Ω–æ" : "‚úó –û—à–∏–±–∫–∞") . "\n\n";
    
    if ($result) {
        $pdo = getDbConnection();
        $stmt = $pdo->query("
            SELECT 
                COUNT(*) as total,
                SUM(CASE WHEN recommended_quantity > 0 THEN 1 ELSE 0 END) as actionable
            FROM replenishment_recommendations 
            WHERE calculation_date = CURDATE()
        ");
        $stats = $stmt->fetch();
        
        echo "–í—Å–µ–≥–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: " . $stats['total'] . "\n";
        echo "–¢—Ä–µ–±—É—é—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: " . $stats['actionable'] . "\n";
        
        if ($stats['actionable'] > 0) {
            echo "\n–¢–æ–ø-5 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:\n";
            $stmt = $pdo->query("
                SELECT product_name, recommended_quantity, ads
                FROM replenishment_recommendations 
                WHERE calculation_date = CURDATE() AND recommended_quantity > 0
                ORDER BY recommended_quantity DESC 
                LIMIT 5
            ");
            
            while ($row = $stmt->fetch()) {
                echo sprintf("  %s: %d —à—Ç. (ADS: %.2f)\n", 
                    $row['product_name'], 
                    $row['recommended_quantity'], 
                    $row['ads']
                );
            }
        }
    }
    
} catch (Exception $e) {
    echo "‚úó –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}
?>
EOF

    chmod +x "$PROJECT_ROOT/test_connection.php"
    chmod +x "$PROJECT_ROOT/test_quick_calculation.php"
    
    log "‚úì –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω—ã"
}

# ============================================================================
# –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
# ============================================================================

run_final_tests() {
    log "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if php "$PROJECT_ROOT/test_connection.php" | grep -q "–≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ"; then
        log "‚úì –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω"
    else
        error "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
        return 1
    fi
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞
    if php "$PROJECT_ROOT/test_quick_calculation.php" | grep -q "–£—Å–ø–µ—à–Ω–æ"; then
        log "‚úì –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–π–¥–µ–Ω"
    else
        warning "–¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö)"
    fi
    
    return 0
}

# ============================================================================
# –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# ============================================================================

main() {
    print_header
    
    log "–ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä–æ–µ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_ROOT"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
    check_requirements
    setup_database
    setup_configuration
    check_data
    setup_web_server
    create_test_scripts
    
    if run_final_tests; then
        success "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!"
        
        echo ""
        echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
        echo -e "${GREEN}‚ïë                                                                ‚ïë${NC}"
        echo -e "${GREEN}‚ïë              ‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï! ‚úÖ                    ‚ïë${NC}"
        echo -e "${GREEN}‚ïë                                                                ‚ïë${NC}"
        echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
        echo ""
        
        echo -e "${BLUE}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
        echo ""
        echo "1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:"
        echo "   php test_connection.php"
        echo "   php test_quick_calculation.php"
        echo ""
        echo "2. –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):"
        if [ "$WEB_SERVER" = "php" ]; then
            echo "   cd $PROJECT_ROOT"
            echo "   php -S localhost:$WEB_PORT"
        else
            echo "   –ù–∞—Å—Ç—Ä–æ–π—Ç–µ $WEB_SERVER —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ"
        fi
        echo ""
        echo "3. –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:"
        echo "   API Health: $WEB_URL/api/replenishment.php?action=health"
        echo "   –î–∞—à–±–æ—Ä–¥: $WEB_URL/html/replenishment_dashboard.php"
        echo ""
        echo "4. –ü–æ–ª–Ω—ã–π —Ä–∞—Å—á–µ—Ç:"
        echo "   php cron_replenishment_weekly.php"
        echo ""
        echo -e "${YELLOW}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
        echo "   - –ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: deployment/replenishment/LOCAL_DEPLOYMENT_GUIDE.md"
        echo "   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: config_replenishment.php"
        echo "   - –õ–æ–≥–∏: logs/replenishment/"
        echo ""
        
    else
        error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
        echo ""
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º."
        exit 1
    fi
}

# ============================================================================
# –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
# ============================================================================

cleanup() {
    if [ $? -ne 0 ]; then
        error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏"
        echo ""
        echo "–î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º:"
        echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL: mysql -u root -p"
        echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º: ls -la $PROJECT_ROOT"
        echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ PHP: tail -f /var/log/php*.log"
        echo ""
        echo "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: $0"
    fi
}

trap cleanup EXIT

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"