<?php
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ PostgreSQL
 */

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö POSTGRESQL\n";
echo "=====================================\n\n";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
require_once __DIR__ . '/config/database_postgresql.php';

echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...\n";
echo "   PG_HOST: " . (getenv('PG_HOST') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û') . "\n";
echo "   PG_PORT: " . (getenv('PG_PORT') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û') . "\n";
echo "   PG_USER: " . (getenv('PG_USER') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û') . "\n";
echo "   PG_PASSWORD: " . (getenv('PG_PASSWORD') ? '‚úÖ –£–°–¢–ê–ù–û–í–õ–ï–ù–û (' . strlen(getenv('PG_PASSWORD')) . ' —Å–∏–º–≤–æ–ª–æ–≤)' : '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û') . "\n";
echo "   PG_NAME: " . (getenv('PG_NAME') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û') . "\n\n";

echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL —Å–µ—Ä–≤–µ—Ä–∞...\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL
$host = getenv('PG_HOST') ?: 'localhost';
$port = getenv('PG_PORT') ?: '5432';

echo "   –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ $host:$port...\n";

$connection = @fsockopen($host, $port, $errno, $errstr, 5);
if ($connection) {
    echo "   ‚úÖ PostgreSQL —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $host:$port\n";
    fclose($connection);
} else {
    echo "   ‚ùå PostgreSQL —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $host:$port\n";
    echo "   –û—à–∏–±–∫–∞: $errstr ($errno)\n";
    echo "\nüîß –†–ï–®–ï–ù–ò–ï:\n";
    echo "   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω:\n";
    echo "      sudo systemctl status postgresql\n";
    echo "      sudo systemctl start postgresql\n";
    echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ /etc/postgresql/*/main/postgresql.conf:\n";
    echo "      listen_addresses = 'localhost'\n";
    echo "      port = 5432\n";
    echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ /etc/postgresql/*/main/pg_hba.conf:\n";
    echo "      local   all             all                                     md5\n";
    echo "      host    all             all             127.0.0.1/32            md5\n\n";
    return;
}

echo "\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n";

$user = getenv('PG_USER') ?: 'mi_core_user';
$password = getenv('PG_PASSWORD') ?: '';
$dbname = getenv('PG_NAME') ?: 'mi_core_db';

if (!$password) {
    echo "   ‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è\n";
    echo "\nüîß –†–ï–®–ï–ù–ò–ï:\n";
    echo "   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ .env —Ñ–∞–π–ª–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω PG_PASSWORD\n\n";
    return;
}

// –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL
try {
    $dsn = "pgsql:host=$host;port=$port;dbname=$dbname";
    echo "   –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$user' –∫ –±–∞–∑–µ '$dbname'...\n";
    
    $pdo = new PDO($dsn, $user, $password, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_TIMEOUT => 5
    ]);
    
    echo "   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é PostgreSQL
    $result = $pdo->query('SELECT version()')->fetch();
    echo "   PostgreSQL –≤–µ—Ä—Å–∏—è: " . $result['version'] . "\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü
    $result = $pdo->query("SELECT count(*) as count FROM information_schema.tables WHERE table_schema = 'public'")->fetch();
    echo "   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ: " . $result['count'] . "\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ inventory
    $result = $pdo->query("SELECT EXISTS(SELECT 1 FROM information_schema.tables WHERE table_name = 'inventory') as exists")->fetch();
    if ($result['exists']) {
        echo "   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'inventory' –Ω–∞–π–¥–µ–Ω–∞\n";
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        $result = $pdo->query("SELECT count(*) as count FROM inventory LIMIT 1")->fetch();
        echo "   –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ inventory: " . $result['count'] . "\n";
    } else {
        echo "   ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ 'inventory' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n";
        echo "   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n";
    }
    
} catch (PDOException $e) {
    echo "   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: " . $e->getMessage() . "\n";
    
    $errorCode = $e->getCode();
    $errorMessage = $e->getMessage();
    
    echo "\nüîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò:\n";
    
    if (strpos($errorMessage, 'fe_sendauth: no password supplied') !== false) {
        echo "   –ü–†–û–ë–õ–ï–ú–ê: –ù–µ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏\n";
        echo "   –†–ï–®–ï–ù–ò–ï:\n";
        echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ:\n";
        echo "      PG_PASSWORD=PostgreSQL_MDM_2025_SecurePass!\n";
        echo "   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ\n";
        echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É .env (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 600)\n";
        
    } elseif (strpos($errorMessage, 'password authentication failed') !== false) {
        echo "   –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n";
        echo "   –†–ï–®–ï–ù–ò–ï:\n";
        echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –≤ .env —Ñ–∞–π–ª–µ\n";
        echo "   2. –°–±—Ä–æ—Å—å—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ PostgreSQL:\n";
        echo "      sudo -u postgres psql\n";
        echo "      ALTER USER mi_core_user PASSWORD 'PostgreSQL_MDM_2025_SecurePass!';\n";
        
    } elseif (strpos($errorMessage, 'database') !== false && strpos($errorMessage, 'does not exist') !== false) {
        echo "   –ü–†–û–ë–õ–ï–ú–ê: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n";
        echo "   –†–ï–®–ï–ù–ò–ï:\n";
        echo "   1. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:\n";
        echo "      sudo -u postgres createdb -O mi_core_user mi_core_db\n";
        echo "   2. –ò–ª–∏ —á–µ—Ä–µ–∑ psql:\n";
        echo "      sudo -u postgres psql\n";
        echo "      CREATE DATABASE mi_core_db OWNER mi_core_user;\n";
        
    } elseif (strpos($errorMessage, 'role') !== false && strpos($errorMessage, 'does not exist') !== false) {
        echo "   –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n";
        echo "   –†–ï–®–ï–ù–ò–ï:\n";
        echo "   1. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n";
        echo "      sudo -u postgres createuser -P mi_core_user\n";
        echo "   2. –ò–ª–∏ —á–µ—Ä–µ–∑ psql:\n";
        echo "      sudo -u postgres psql\n";
        echo "      CREATE USER mi_core_user WITH PASSWORD 'PostgreSQL_MDM_2025_SecurePass!';\n";
        echo "      GRANT ALL PRIVILEGES ON DATABASE mi_core_db TO mi_core_user;\n";
        
    } else {
        echo "   –û–ë–©–ò–ï –†–ï–®–ï–ù–ò–Ø:\n";
        echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å PostgreSQL: sudo systemctl status postgresql\n";
        echo "   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL: sudo systemctl restart postgresql\n";
        echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo tail -f /var/log/postgresql/postgresql-*.log\n";
    }
}

echo "\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ª–∏ production_db_override.php
if (file_exists(__DIR__ . '/config/production_db_override.php')) {
    echo "   ‚úÖ –§–∞–π–ª production_db_override.php –Ω–∞–π–¥–µ–Ω\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é getProductionPgConnection
    if (function_exists('getProductionPgConnection')) {
        echo "   ‚úÖ –§—É–Ω–∫—Ü–∏—è getProductionPgConnection –¥–æ—Å—Ç—É–ø–Ω–∞\n";
        
        try {
            require_once __DIR__ . '/config/production_db_override.php';
            $prodPdo = getProductionPgConnection();
            echo "   ‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n";
        } catch (Exception $e) {
            echo "   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: " . $e->getMessage() . "\n";
        }
    } else {
        echo "   ‚ùå –§—É–Ω–∫—Ü–∏—è getProductionPgConnection –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n";
    }
} else {
    echo "   ‚ùå –§–∞–π–ª production_db_override.php –Ω–µ –Ω–∞–π–¥–µ–Ω\n";
}

echo "\nüèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê\n";
echo "========================\n";

// –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–µ—à–µ–Ω–∏—é
echo "\nüí° –ë–´–°–¢–†–´–ï –†–ï–®–ï–ù–ò–Ø:\n";
echo "1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω):\n";
echo "   sudo apt update && sudo apt install postgresql postgresql-contrib\n";
echo "   sudo systemctl start postgresql\n";
echo "   sudo systemctl enable postgresql\n\n";

echo "2. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:\n";
echo "   sudo -u postgres psql << EOF\n";
echo "   CREATE USER mi_core_user WITH PASSWORD 'PostgreSQL_MDM_2025_SecurePass!';\n";
echo "   CREATE DATABASE mi_core_db OWNER mi_core_user;\n";
echo "   GRANT ALL PRIVILEGES ON DATABASE mi_core_db TO mi_core_user;\n";
echo "   \\q\n";
echo "   EOF\n\n";

echo "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n";
echo "   psql -h localhost -U mi_core_user -d mi_core_db\n\n";

echo "4. –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã:\n";
echo "   php run_production_tests.php\n\n";

?>