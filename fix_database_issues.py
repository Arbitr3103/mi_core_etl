#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
"""

import os
import mysql.connector
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def fix_database_issues():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö."""
    try:
        connection = mysql.connector.connect(
            host=os.getenv('DB_HOST', 'localhost'),
            user=os.getenv('DB_USER', 'v_admin'),
            password=os.getenv('DB_PASSWORD'),
            database=os.getenv('DB_NAME', 'mi_core'),
            charset='utf8mb4',
            collation='utf8mb4_unicode_ci'
        )
        
        cursor = connection.cursor()
        
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...")
        
        # 1. –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø product_id –Ω–∞ BIGINT –¥–ª—è –±–æ–ª—å—à–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        print("1. –ò–∑–º–µ–Ω—è–µ–º product_id –Ω–∞ BIGINT...")
        cursor.execute("""
            ALTER TABLE inventory_data 
            MODIFY COLUMN product_id BIGINT NOT NULL
        """)
        print("‚úÖ product_id –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ BIGINT")
        
        # 2. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É source –≤ sync_logs –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        print("2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–æ–Ω–∫—É source –≤ sync_logs...")
        cursor.execute("DESCRIBE sync_logs")
        columns = [row[0] for row in cursor.fetchall()]
        
        if 'source' not in columns:
            cursor.execute("""
                ALTER TABLE sync_logs 
                ADD COLUMN source VARCHAR(50) DEFAULT 'Ozon'
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ source –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ sync_logs")
        else:
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ source —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ sync_logs")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        print("3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º inventory_data
        cursor.execute("DESCRIBE inventory_data")
        inventory_columns = cursor.fetchall()
        print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ inventory_data:")
        for col in inventory_columns:
            print(f"  - {col[0]}: {col[1]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º sync_logs
        cursor.execute("DESCRIBE sync_logs")
        sync_columns = cursor.fetchall()
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ sync_logs:")
        for col in sync_columns:
            print(f"  - {col[0]}: {col[1]}")
        
        cursor.close()
        connection.close()
        
        print("\n‚úÖ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        return True
        
    except mysql.connector.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    fix_database_issues()