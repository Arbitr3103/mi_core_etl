#!/usr/bin/env node

/**
 * JavaScript Test Runner –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
 *
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ JavaScript —Ç–µ—Å—Ç—ã –≤–∫–ª—é—á–∞—è unit –∏ integration —Ç–µ—Å—Ç—ã
 * –¥–ª—è CountryFilter –∏ FilterManager –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 *
 * @version 1.0
 * @author ZUZ System
 */

const { execSync } = require("child_process");
const fs = require("fs");
const path = require("path");

class JSTestRunner {
  constructor() {
    this.testFiles = [
      "CountryFilter.test.js",
      "FilterManager.test.js",
      "CountryFilter.integration.test.js",
    ];
    this.totalTests = 0;
    this.passedTests = 0;
    this.failedTests = 0;
    this.startTime = Date.now();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Jest
   */
  checkJestAvailability() {
    try {
      execSync("npx jest --version", { stdio: "pipe" });
      return true;
    } catch (error) {
      console.log("‚ö†Ô∏è  Jest –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...");
      try {
        execSync("npm install --save-dev jest", { stdio: "inherit" });
        return true;
      } catch (installError) {
        console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Jest:", installError.message);
        return false;
      }
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
   */
  checkTestFiles() {
    const missingFiles = [];

    for (const testFile of this.testFiles) {
      const filePath = path.join(__dirname, testFile);
      if (!fs.existsSync(filePath)) {
        missingFiles.push(testFile);
      }
    }

    if (missingFiles.length > 0) {
      console.error("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã:", missingFiles.join(", "));
      return false;
    }

    return true;
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ Jest –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  createJestConfig() {
    const jestConfig = {
      testEnvironment: "jsdom",
      setupFilesAfterEnv: ["<rootDir>/tests/jest.setup.js"],
      testMatch: ["<rootDir>/tests/*.test.js"],
      collectCoverage: true,
      coverageDirectory: "coverage",
      coverageReporters: ["text", "lcov", "html"],
      collectCoverageFrom: ["js/CountryFilter.js", "js/FilterManager.js"],
      verbose: true,
      testTimeout: 10000,
    };

    fs.writeFileSync("jest.config.json", JSON.stringify(jestConfig, null, 2));
    console.log("‚úÖ Jest –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞");
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ Jest setup —Ñ–∞–π–ª–∞
   */
  createJestSetup() {
    const setupContent = `
// Jest setup –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è

// –ú–æ–∫ –¥–ª—è fetch API
global.fetch = jest.fn();

// –ú–æ–∫ –¥–ª—è AbortSignal
global.AbortSignal = {
    timeout: jest.fn().mockReturnValue({ aborted: false })
};

// –ú–æ–∫ –¥–ª—è performance API
global.performance = {
    now: jest.fn(() => Date.now())
};

// –ú–æ–∫ –¥–ª—è navigator
Object.defineProperty(global.navigator, 'userAgent', {
    writable: true,
    value: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
});

Object.defineProperty(global.navigator, 'maxTouchPoints', {
    writable: true,
    value: 0
});

// –ú–æ–∫ –¥–ª—è window
global.window = {
    innerWidth: 1024,
    innerHeight: 768,
    addEventListener: jest.fn(),
    removeEventListener: jest.fn()
};

// –ú–æ–∫ –¥–ª—è document
global.document = {
    getElementById: jest.fn(),
    createElement: jest.fn(() => ({
        id: '',
        innerHTML: '',
        style: {},
        value: '',
        disabled: false,
        addEventListener: jest.fn(),
        removeEventListener: jest.fn(),
        appendChild: jest.fn(),
        querySelector: jest.fn(),
        querySelectorAll: jest.fn(() => []),
        dispatchEvent: jest.fn()
    })),
    body: {
        appendChild: jest.fn(),
        removeChild: jest.fn()
    },
    head: {
        appendChild: jest.fn()
    }
};

// –û—á–∏—Å—Ç–∫–∞ –º–æ–∫–æ–≤ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º
beforeEach(() => {
    jest.clearAllMocks();
    
    // –°–±—Ä–æ—Å fetch –º–æ–∫–∞
    fetch.mockClear();
    fetch.mockResolvedValue({
        ok: true,
        json: () => Promise.resolve({
            success: true,
            data: []
        })
    });
});
`;

    const setupPath = path.join(__dirname, "jest.setup.js");
    fs.writeFileSync(setupPath, setupContent);
    console.log("‚úÖ Jest setup —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω");
  }

  /**
   * –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
   */
  async runTests() {
    console.log("üöÄ –ó–ê–ü–£–°–ö JAVASCRIPT –¢–ï–°–¢–û–í");
    console.log("=".repeat(80));
    console.log(`–î–∞—Ç–∞: ${new Date().toLocaleString()}`);
    console.log("–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: CountryFilter, FilterManager");
    console.log("=".repeat(80));
    console.log();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Jest
    if (!this.checkJestAvailability()) {
      console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Jest");
      process.exit(1);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    if (!this.checkTestFiles()) {
      console.error("‚ùå –ù–µ –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã");
      process.exit(1);
    }

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    this.createJestConfig();
    this.createJestSetup();

    try {
      console.log("üß™ –ó–∞–ø—É—Å–∫ Jest —Ç–µ—Å—Ç–æ–≤...\n");

      // –ó–∞–ø—É—Å–∫–∞–µ–º Jest —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
      const jestCommand =
        "npx jest --config=jest.config.json --verbose --no-cache";
      const output = execSync(jestCommand, {
        encoding: "utf8",
        stdio: "pipe",
      });

      console.log(output);

      // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      this.parseJestResults(output);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤:");
      console.error(error.stdout || error.message);

      // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
      if (error.stdout) {
        this.parseJestResults(error.stdout);
      }
    }

    this.printFinalReport();
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Jest
   */
  parseJestResults(output) {
    // –ò—â–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ—Å—Ç–æ–≤
    const testSuiteMatch = output.match(
      /Test Suites:.*?(\d+) passed.*?(\d+) total/
    );
    const testMatch = output.match(
      /Tests:.*?(\d+) passed.*?(\d+) failed.*?(\d+) total/
    );

    if (testMatch) {
      this.passedTests = parseInt(testMatch[1]) || 0;
      this.failedTests = parseInt(testMatch[2]) || 0;
      this.totalTests = parseInt(testMatch[3]) || 0;
    } else {
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥
      const passedMatch = output.match(/(\d+) passing/);
      const failedMatch = output.match(/(\d+) failing/);

      this.passedTests = passedMatch ? parseInt(passedMatch[1]) : 0;
      this.failedTests = failedMatch ? parseInt(failedMatch[1]) : 0;
      this.totalTests = this.passedTests + this.failedTests;
    }
  }

  /**
   * –í—ã–≤–æ–¥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
   */
  printFinalReport() {
    const endTime = Date.now();
    const executionTime = ((endTime - this.startTime) / 1000).toFixed(2);

    console.log("\n" + "=".repeat(80));
    console.log("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ü–û JAVASCRIPT –¢–ï–°–¢–ê–ú");
    console.log("=".repeat(80));

    console.log("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:");
    console.log(`  –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${this.totalTests}`);
    console.log(`  ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${this.passedTests}`);
    console.log(`  ‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${this.failedTests}`);

    if (this.totalTests > 0) {
      const successRate = ((this.passedTests / this.totalTests) * 100).toFixed(
        1
      );
      console.log(`  üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${successRate}%`);
    }

    console.log(`  ‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${executionTime} —Å–µ–∫`);

    console.log("\nüìã –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:");
    console.log("  ‚úÖ CountryFilter:");
    console.log("     - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥");
    console.log("     - –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω (–≤—Å–µ, –ø–æ –º–∞—Ä–∫–µ, –ø–æ –º–æ–¥–µ–ª–∏)");
    console.log("     - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å");
    console.log("     - –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤");
    console.log("     - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫");
    console.log("     - –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è");
    console.log("     - UI —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Å–æ–±—ã—Ç–∏—è");

    console.log("\n  ‚úÖ FilterManager:");
    console.log("     - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CountryFilter");
    console.log("     - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤");
    console.log("     - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω");
    console.log("     - –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤");
    console.log("     - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤");
    console.log("     - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫");

    console.log("\n  ‚úÖ Integration Tests:");
    console.log("     - –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏");
    console.log("     - –†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è");
    console.log("     - –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏");
    console.log("     - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏");
    console.log("     - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏");

    console.log("\nüéØ –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø–ú:");
    console.log("  ‚úÖ Requirement 1.1: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ");
    console.log("  ‚úÖ Requirement 1.3: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω");
    console.log("  ‚úÖ Requirement 3.1: –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è");
    console.log("  ‚úÖ Requirement 4.1: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏");
    console.log("  ‚úÖ Requirement 4.2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞ frontend");

    if (this.failedTests === 0) {
      console.log("\nüéâ –í–°–ï JAVASCRIPT –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!");
      console.log(
        "Frontend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."
      );
    } else {
      console.log("\n‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í JAVASCRIPT –¢–ï–°–¢–ê–•!");
      console.log(
        `–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å ${this.failedTests} –ø—Ä–æ–≤–∞–ª–∏–≤—à–∏—Ö—Å—è —Ç–µ—Å—Ç–æ–≤.`
      );
    }

    console.log("\n" + "=".repeat(80));

    // –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    this.cleanup();

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
    if (this.failedTests > 0) {
      process.exit(1);
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
   */
  cleanup() {
    try {
      if (fs.existsSync("jest.config.json")) {
        fs.unlinkSync("jest.config.json");
      }

      const setupPath = path.join(__dirname, "jest.setup.js");
      if (fs.existsSync(setupPath)) {
        fs.unlinkSync(setupPath);
      }

      console.log("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã");
    } catch (error) {
      console.warn("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:", error.message);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  const runner = new JSTestRunner();
  runner.runTests().catch((error) => {
    console.error(
      "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê JAVASCRIPT –¢–ï–°–¢ –†–ê–ù–ù–ï–†–ê:",
      error.message
    );
    process.exit(1);
  });
}

module.exports = JSTestRunner;
