<?php
/**
 * –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Ä–æ–Ω–∫–∏ —Å —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π Ozon API
 */

echo "üß™ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Ä–æ–Ω–∫–∏ Ozon\n";
echo "==========================================\n\n";

// –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç Ozon API
$mockOzonResponse = [
    "data" => [
        [
            "dimensions" => [
                ["id" => "1750881567", "name" => "–°–º–∞—Ä—Ç—Ñ–æ–Ω iPhone 15"]
            ],
            "metrics" => [4312240.50, 8945, 15000] // [revenue, ordered_units, hits_view_pdp]
        ],
        [
            "dimensions" => [
                ["id" => "1750881568", "name" => "–ù–∞—É—à–Ω–∏–∫–∏ AirPods"]
            ],
            "metrics" => [2156120.25, 4472, 8500]
        ]
    ],
    "totals" => [6468360.75, 13417, 23500]
];

echo "üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (—Å–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ Ozon API):\n";
echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: " . count($mockOzonResponse['data']) . "\n";
echo "–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: " . $mockOzonResponse['totals'][0] . " —Ä—É–±.\n";
echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: " . $mockOzonResponse['totals'][1] . "\n";
echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: " . $mockOzonResponse['totals'][2] . "\n\n";

try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    $pdo = null;
    try {
        $host = '127.0.0.1';
        $dbname = 'mi_core_db';
        $username = 'mi_core_user';
        $password = 'secure_password_123';
        
        $dsn = "mysql:host={$host};dbname={$dbname};charset=utf8mb4";
        $pdo = new PDO($dsn, $username, $password, [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
        ]);
        echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n";
    } catch (Exception $e) {
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î: " . $e->getMessage() . "\n";
        echo "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î\n";
    }
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API
    require_once 'src/classes/OzonAnalyticsAPI.php';
    $ozonAPI = new OzonAnalyticsAPI('26100', '7e074977-e0db-4ace-ba9e-82903e088b4b', $pdo);
    
    echo "‚úÖ OzonAnalyticsAPI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n\n";
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –º–µ—Ç–æ–¥—É
    $reflection = new ReflectionClass($ozonAPI);
    $processMethod = $reflection->getMethod('processFunnelData');
    $processMethod->setAccessible(true);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
    $dateFrom = '2024-01-01';
    $dateTo = '2024-01-31';
    $filters = ['product_id' => null, 'campaign_id' => null];
    
    echo "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ processFunnelData...\n";
    $result = $processMethod->invoke($ozonAPI, $mockOzonResponse, $dateFrom, $dateTo, $filters);
    
    echo "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!\n";
    echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ: " . count($result) . "\n\n";
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "üìà –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n";
    echo "=====================================\n";
    
    $totalRevenue = 0;
    $totalOrders = 0;
    $totalViews = 0;
    $totalCartAdditions = 0;
    
    foreach ($result as $index => $item) {
        echo "\nüõçÔ∏è –¢–æ–≤–∞—Ä " . ($index + 1) . ":\n";
        echo "  Product ID: " . ($item['product_id'] ?? 'null') . "\n";
        echo "  –í—ã—Ä—É—á–∫–∞: " . number_format($item['revenue'], 2) . " —Ä—É–±.\n";
        echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: " . number_format($item['views']) . "\n";
        echo "  –î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: " . number_format($item['cart_additions']) . "\n";
        echo "  –ó–∞–∫–∞–∑—ã: " . number_format($item['orders']) . "\n";
        echo "  –ö–æ–Ω–≤–µ—Ä—Å–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä—ã ‚Üí –∫–æ—Ä–∑–∏–Ω–∞: " . $item['conversion_view_to_cart'] . "%\n";
        echo "  –ö–æ–Ω–≤–µ—Ä—Å–∏—è –∫–æ—Ä–∑–∏–Ω–∞ ‚Üí –∑–∞–∫–∞–∑: " . $item['conversion_cart_to_order'] . "%\n";
        echo "  –û–±—â–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è: " . $item['conversion_overall'] . "%\n";
        
        $totalRevenue += $item['revenue'];
        $totalOrders += $item['orders'];
        $totalViews += $item['views'];
        $totalCartAdditions += $item['cart_additions'];
    }
    
    echo "\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n";
    echo "======================\n";
    echo "–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: " . number_format($totalRevenue, 2) . " —Ä—É–±.\n";
    echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: " . number_format($totalViews) . "\n";
    echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É: " . number_format($totalCartAdditions) . "\n";
    echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: " . number_format($totalOrders) . "\n";
    
    if ($totalViews > 0) {
        $overallConversion = round(($totalOrders / $totalViews) * 100, 2);
        echo "–û–±—â–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è: " . $overallConversion . "%\n";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
    echo "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö:\n";
    echo "===============================\n";
    
    $dataValid = true;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã—Ä—É—á–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    $expectedRevenue = $mockOzonResponse['totals'][0];
    if (abs($totalRevenue - $expectedRevenue) > 0.01) {
        echo "‚ùå –û—à–∏–±–∫–∞: –≤—ã—Ä—É—á–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º\n";
        echo "   –û–∂–∏–¥–∞–ª–æ—Å—å: " . $expectedRevenue . ", –ø–æ–ª—É—á–µ–Ω–æ: " . $totalRevenue . "\n";
        $dataValid = false;
    } else {
        echo "‚úÖ –í—ã—Ä—É—á–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞\n";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    $expectedOrders = $mockOzonResponse['totals'][1];
    if ($totalOrders != $expectedOrders) {
        echo "‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º\n";
        echo "   –û–∂–∏–¥–∞–ª–æ—Å—å: " . $expectedOrders . ", –ø–æ–ª—É—á–µ–Ω–æ: " . $totalOrders . "\n";
        $dataValid = false;
    } else {
        echo "‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    $expectedViews = $mockOzonResponse['totals'][2];
    if ($totalViews != $expectedViews) {
        echo "‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º\n";
        echo "   –û–∂–∏–¥–∞–ª–æ—Å—å: " . $expectedViews . ", –ø–æ–ª—É—á–µ–Ω–æ: " . $totalViews . "\n";
        $dataValid = false;
    } else {
        echo "‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤–æ—Ä–æ–Ω–∫–∏
    foreach ($result as $index => $item) {
        if ($item['cart_additions'] > $item['views']) {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–æ–≤–∞—Ä–µ " . ($index + 1) . ": –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –±–æ–ª—å—à–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n";
            $dataValid = false;
        }
        
        if ($item['orders'] > $item['cart_additions']) {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–æ–≤–∞—Ä–µ " . ($index + 1) . ": –∑–∞–∫–∞–∑—ã –±–æ–ª—å—à–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É\n";
            $dataValid = false;
        }
    }
    
    if ($dataValid) {
        echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!\n";
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    if ($pdo) {
        echo "\nüíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...\n";
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ revenue –≤ —Ç–∞–±–ª–∏—Ü–µ
            $stmt = $pdo->query("DESCRIBE ozon_funnel_data");
            $columns = $stmt->fetchAll();
            $hasRevenueColumn = false;
            
            foreach ($columns as $column) {
                if ($column['Field'] === 'revenue') {
                    $hasRevenueColumn = true;
                    break;
                }
            }
            
            if (!$hasRevenueColumn) {
                echo "‚ö†Ô∏è –ü–æ–ª–µ 'revenue' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ ozon_funnel_data\n";
                echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é: php apply_revenue_migration.php\n";
            } else {
                echo "‚úÖ –ü–æ–ª–µ 'revenue' –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü–µ\n";
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                $saveMethod = $reflection->getMethod('saveFunnelDataToDatabase');
                $saveMethod->setAccessible(true);
                
                // –£–±–∏—Ä–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                $cleanResult = array_map(function($item) {
                    unset($item['debug_request']);
                    unset($item['debug_raw_response']);
                    return $item;
                }, $result);
                
                $saveMethod->invoke($ozonAPI, $cleanResult);
                echo "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n";
            }
            
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–î: " . $e->getMessage() . "\n";
        }
    }
    
    echo "\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n";
    echo "–ú–µ—Ç–æ–¥ processFunnelData –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É Ozon API.\n";
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: " . $e->getMessage() . "\n";
    echo "–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞: " . $e->getTraceAsString() . "\n";
}
?>