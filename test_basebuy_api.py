#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ BaseBuy API endpoints.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã API –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.
"""

import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(__file__))

from importers.car_data_updater import CarDataUpdater

def test_basebuy_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ BaseBuy API endpoints."""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BASEBUY API ENDPOINTS")
    print("=" * 60)
    
    try:
        updater = CarDataUpdater()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
        if not updater.api_key:
            print("‚ùå –û–®–ò–ë–ö–ê: BASEBUY_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            print("–î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
            print('BASEBUY_API_KEY="bf28ef59a50fcaa49b8ebedce8cc947e"')
            return False
        
        print(f"üîë API –∫–ª—é—á: {updater.api_key[:10]}...")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ HTML –ø–∞—Ä—Å–∏–Ω–≥
        print("1Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–£–ß–ï–ù–ò–Ø –í–ï–†–°–ò–ò")
        print("-" * 40)
        
        version = updater.get_latest_version_from_api()
        if version:
            print(f"‚úÖ –í–µ—Ä—Å–∏—è –ø–æ–ª—É—á–µ–Ω–∞: {version}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ API endpoints
        print("2Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API ENDPOINTS")
        print("-" * 40)
        
        results = updater.test_api_endpoints()
        
        if results['api_key_valid']:
            print("‚úÖ API –∫–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
        else:
            print("‚ùå API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º")
        
        if results['errors']:
            print("‚ùå –û—à–∏–±–∫–∏:")
            for error in results['errors']:
                print(f"   - {error}")
        
        print()
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û –°–£–©–ù–û–°–¢–Ø–ú:")
        print("-" * 40)
        
        for entity_name, entity_result in results['entities'].items():
            print(f"\nüöó {entity_name.upper()}:")
            
            if entity_result['error']:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {entity_result['error']}")
                continue
            
            if entity_result['update_date']:
                print(f"   üìÖ –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {entity_result['update_date']}")
            else:
                print("   ‚ùå –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
            
            if entity_result['csv_available']:
                print(f"   ‚úÖ CSV –¥–æ—Å—Ç—É–ø–µ–Ω ({entity_result['csv_size']} —Å–∏–º–≤–æ–ª–æ–≤)")
                if 'csv_preview' in entity_result:
                    print(f"   üìÑ –ü—Ä–µ–≤—å—é CSV:")
                    print(f"      {entity_result['csv_preview']}")
            else:
                print("   ‚ùå CSV –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        print()
        print("3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–ö–†–ï–¢–ù–´–• ENDPOINTS")
        print("-" * 40)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ URL
        test_urls = [
            f"{updater.api_base_url}/mark.getAll.csv?api_key={updater.api_key}&id_type=1",
            f"{updater.api_base_url}/mark.getDateUpdate.timestamp?api_key={updater.api_key}&id_type=1",
            f"{updater.api_base_url}/model.getAll.csv?api_key={updater.api_key}&id_type=1",
            f"{updater.api_base_url}/serie.getAll.csv?api_key={updater.api_key}&id_type=1"
        ]
        
        import requests
        
        for url in test_urls:
            try:
                print(f"üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º: {url.replace(updater.api_key, 'XXX')}")
                
                response = requests.get(url, timeout=10)
                
                if response.status_code == 200:
                    content = response.text[:100] + "..." if len(response.text) > 100 else response.text
                    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
                    print(f"   üìÑ –†–∞–∑–º–µ—Ä: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
                    print(f"   üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {content}")
                else:
                    print(f"   ‚ùå –°—Ç–∞—Ç—É—Å: {response.status_code}")
                    print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            print()
        
        print("4Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
        print("-" * 40)
        
        if results['api_key_valid']:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: python3 importers/car_data_updater.py")
            print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î")
            print("   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ cron job –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å API:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞")
            print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞")
            print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã API (100 –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å)")
        
        return results['api_key_valid']
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        return False

if __name__ == "__main__":
    success = test_basebuy_api()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    else:
        print("üí• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ò–õ–û–°–¨ –° –û–®–ò–ë–ö–ê–ú–ò!")
    
    sys.exit(0 if success else 1)
