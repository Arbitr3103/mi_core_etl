<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üì¶ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –î–∞—à–±–æ—Ä–¥ –°–∫–ª–∞–¥–∞ - –ü—Ä–∏–Ω—è—Ç–∏–µ –†–µ—à–µ–Ω–∏–π</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1600px;
            margin: 0 auto;
        }
        
        .header {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            margin-bottom: 25px;
            text-align: center;
        }
        
        .header h1 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 2.2em;
        }
        
        .alerts-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }
        
        .alert-card {
            background: white;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            border-left: 5px solid;
        }
        
        .alert-card.critical { border-color: #e74c3c; }
        .alert-card.warning { border-color: #f39c12; }
        .alert-card.success { border-color: #27ae60; }
        
        .alert-card h3 {
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }
        
        .products-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .products-card h3 {
            color: #2c3e50;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .product-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            margin-bottom: 10px;
            background: #f8f9fa;
            border-radius: 10px;
            border-left: 4px solid;
        }
        
        .product-item.critical { border-color: #e74c3c; }
        .product-item.warning { border-color: #f39c12; }
        .product-item.success { border-color: #27ae60; }
        
        .product-info {
            flex: 1;
        }
        
        .product-name {
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 5px;
        }
        
        .product-details {
            font-size: 12px;
            color: #6c757d;
        }
        
        .product-stock {
            text-align: right;
        }
        
        .stock-value {
            font-size: 1.5em;
            font-weight: bold;
        }
        
        .stock-value.critical { color: #e74c3c; }
        .stock-value.warning { color: #f39c12; }
        .stock-value.success { color: #27ae60; }
        
        .stock-label {
            font-size: 12px;
            color: #6c757d;
        }
        
        .actions-section {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            margin-bottom: 25px;
        }
        
        .actions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .action-card {
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid;
        }
        
        .action-card.urgent { 
            background: #fdf2f2; 
            border-color: #e74c3c; 
        }
        
        .action-card.important { 
            background: #fefbf3; 
            border-color: #f39c12; 
        }
        
        .action-card.normal { 
            background: #f0f9f4; 
            border-color: #27ae60; 
        }
        
        .action-title {
            font-weight: bold;
            margin-bottom: 10px;
            color: #2c3e50;
        }
        
        .action-description {
            font-size: 14px;
            color: #6c757d;
            margin-bottom: 15px;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            font-size: 12px;
            font-weight: bold;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
        }
        
        .btn-primary { background: #3498db; color: white; }
        .btn-success { background: #27ae60; color: white; }
        .btn-warning { background: #f39c12; color: white; }
        .btn-danger { background: #e74c3c; color: white; }
        
        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 3px 10px rgba(0,0,0,0.2);
        }
        
        .kpi-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 25px;
        }
        
        .kpi-card {
            background: white;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .kpi-value {
            font-size: 2em;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 5px;
        }
        
        .kpi-label {
            color: #7f8c8d;
            font-size: 14px;
        }
        
        .refresh-button {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 50%;
            font-size: 20px;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }
        
        .refresh-button:hover {
            transform: scale(1.1);
        }
        
        .loading {
            text-align: center;
            color: white;
            font-size: 18px;
            padding: 50px;
        }
        
        .no-data {
            text-align: center;
            color: #6c757d;
            font-style: italic;
            padding: 20px;
        }
        
        .trend-indicator {
            display: inline-flex;
            align-items: center;
            gap: 5px;
            font-size: 12px;
            margin-top: 5px;
        }
        
        .trend-up { color: #27ae60; }
        .trend-down { color: #e74c3c; }
        .trend-stable { color: #7f8c8d; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üì¶ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –î–∞—à–±–æ—Ä–¥ –°–∫–ª–∞–¥–∞</h1>
            <p>–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –ø—Ä–æ–¥–∞–∂</p>
        </div>
        
        <div id="dashboard-content" class="loading">
            ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –æ—Å—Ç–∞—Ç–∫–∞—Ö...
        </div>
        
        <button class="refresh-button" onclick="loadDashboard()" title="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ">
            üîÑ
        </button>
    </div>
    
    <script>
        async function loadDashboard() {
            try {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏ –æ—Å—Ç–∞—Ç–∫–∞—Ö
                const [inventoryResponse, qualityResponse] = await Promise.all([
                    fetch('../api/inventory-analytics.php'),
                    fetch('../api/quality-metrics.php')
                ]);
                
                let inventoryData = null;
                let qualityData = null;
                
                try {
                    inventoryData = await inventoryResponse.json();
                } catch (e) {
                    console.log('Inventory API not available, using mock data');
                }
                
                try {
                    qualityData = await qualityResponse.json();
                } catch (e) {
                    console.log('Quality API not available');
                }
                
                renderDashboard(inventoryData, qualityData);
                
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('dashboard-content').innerHTML = 
                    '<p style="color: red; text-align: center;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.</p>';
                renderDashboard(null, null);
            }
        }
        
        function renderDashboard(inventoryData, qualityData) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
            const mockData = generateMockInventoryData();
            const data = inventoryData?.status === 'success' ? inventoryData.data : mockData;
            
            let html = '';
            
            // KPI —Å–µ–∫—Ü–∏—è
            html += renderKPISection(data);
            
            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã
            html += renderAlertsSection(data);
            
            // –¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            html += renderProductsSection(data);
            
            // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            html += renderActionsSection(data);
            
            document.getElementById('dashboard-content').innerHTML = html;
        }
        
        function renderKPISection(data) {
            return \`
                <div class="kpi-grid">
                    <div class="kpi-card">
                        <div class="kpi-value" style="color: #e74c3c;">\${data.critical_stock_count}</div>
                        <div class="kpi-label">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫</div>
                        <div class="trend-indicator trend-down">
                            ‚ÜòÔ∏è –¢—Ä–µ–±—É–µ—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
                        </div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-value" style="color: #f39c12;">\${data.low_stock_count}</div>
                        <div class="kpi-label">–ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫</div>
                        <div class="trend-indicator trend-down">
                            ‚ö†Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫—É–ø–∫—É
                        </div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-value" style="color: #27ae60;">\${data.overstock_count}</div>
                        <div class="kpi-label">–ò–∑–±—ã—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞</div>
                        <div class="trend-indicator trend-up">
                            üìà –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è –∞–∫—Ü–∏–π
                        </div>
                    </div>
                    <div class="kpi-card">
                        <div class="kpi-value">\${(data.total_inventory_value / 1000000).toFixed(1)}–ú</div>
                        <div class="kpi-label">–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–∫–ª–∞–¥–∞ (‚ÇΩ)</div>
                        <div class="trend-indicator trend-stable">
                            üìä –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
                        </div>
                    </div>
                </div>
            \`;
        }
        
        function renderAlertsSection(data) {
            return \`
                <div class="alerts-section">
                    <div class="alert-card critical">
                        <h3>üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</h3>
                        <p><strong>\${data.critical_stock_count} —Ç–æ–≤–∞—Ä–æ–≤</strong> —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–º –æ—Å—Ç–∞—Ç–∫–æ–º</p>
                        <p>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ –ø—Ä–æ–¥–∞–∂: <strong>\${(data.potential_lost_sales / 1000).toFixed(0)}–ö ‚ÇΩ/–¥–µ–Ω—å</strong></p>
                        <p>–°—Ä–æ—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞!</p>
                    </div>
                    
                    <div class="alert-card warning">
                        <h3>‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è</h3>
                        <p><strong>\${data.low_stock_count} —Ç–æ–≤–∞—Ä–æ–≤</strong> —Å –Ω–∏–∑–∫–∏–º –æ—Å—Ç–∞—Ç–∫–æ–º</p>
                        <p>–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–∫—É–ø–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ <strong>7-14 –¥–Ω–µ–π</strong></p>
                        <p>–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∏—Å–∫ –¥–µ—Ñ–∏—Ü–∏—Ç–∞</p>
                    </div>
                    
                    <div class="alert-card success">
                        <h3>üí∞ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h3>
                        <p><strong>\${data.overstock_count} —Ç–æ–≤–∞—Ä–æ–≤</strong> —Å –∏–∑–±—ã—Ç–∫–æ–º</p>
                        <p>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞–∫—Ü–∏–∏ –∏ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∏</p>
                        <p>–û—Å–≤–æ–±–æ–¥–∏—Ç—å \${(data.overstock_value / 1000000).toFixed(1)}–ú ‚ÇΩ –æ–±–æ—Ä–æ—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤</p>
                    </div>
                </div>
            \`;
        }
        
        function renderProductsSection(data) {
            return \`
                <div class="products-grid">
                    <div class="products-card">
                        <h3>üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫</h3>
                        \${data.critical_products.map(product => \`
                            <div class="product-item critical">
                                <div class="product-info">
                                    <div class="product-name">\${product.name}</div>
                                    <div class="product-details">
                                        –ê—Ä—Ç–∏–∫—É–ª: \${product.sku} | –ü—Ä–æ–¥–∞–∂/–¥–µ–Ω—å: \${product.daily_sales}
                                    </div>
                                </div>
                                <div class="product-stock">
                                    <div class="stock-value critical">\${product.stock}</div>
                                    <div class="stock-label">—à—Ç. (–Ω–∞ \${product.days_left} –¥–Ω.)</div>
                                </div>
                            </div>
                        \`).join('')}
                    </div>
                    
                    <div class="products-card">
                        <h3>‚ö†Ô∏è –ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫</h3>
                        \${data.low_stock_products.map(product => \`
                            <div class="product-item warning">
                                <div class="product-info">
                                    <div class="product-name">\${product.name}</div>
                                    <div class="product-details">
                                        –ê—Ä—Ç–∏–∫—É–ª: \${product.sku} | –ü—Ä–æ–¥–∞–∂/–¥–µ–Ω—å: \${product.daily_sales}
                                    </div>
                                </div>
                                <div class="product-stock">
                                    <div class="stock-value warning">\${product.stock}</div>
                                    <div class="stock-label">—à—Ç. (–Ω–∞ \${product.days_left} –¥–Ω.)</div>
                                </div>
                            </div>
                        \`).join('')}
                    </div>
                    
                    <div class="products-card">
                        <h3>üìà –ò–∑–±—ã—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞</h3>
                        \${data.overstock_products.map(product => \`
                            <div class="product-item success">
                                <div class="product-info">
                                    <div class="product-name">\${product.name}</div>
                                    <div class="product-details">
                                        –ê—Ä—Ç–∏–∫—É–ª: \${product.sku} | –ü—Ä–æ–¥–∞–∂/–¥–µ–Ω—å: \${product.daily_sales}
                                    </div>
                                </div>
                                <div class="product-stock">
                                    <div class="stock-value success">\${product.stock}</div>
                                    <div class="stock-label">—à—Ç. (–Ω–∞ \${product.days_left} –¥–Ω.)</div>
                                </div>
                            </div>
                        \`).join('')}
                    </div>
                </div>
            \`;
        }
        
        function renderActionsSection(data) {
            return \`
                <div class="actions-section">
                    <h3>üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                    <div class="actions-grid">
                        <div class="action-card urgent">
                            <div class="action-title">üö® –°—Ä–æ—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</div>
                            <div class="action-description">
                                \${data.critical_stock_count} —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É—é—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. 
                                –ü–æ—Ç–µ—Ä–∏ –ø—Ä–æ–¥–∞–∂ –º–æ–≥—É—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å \${(data.potential_lost_sales / 1000).toFixed(0)}–ö ‚ÇΩ/–¥–µ–Ω—å.
                            </div>
                            <div class="action-buttons">
                                <button class="btn btn-danger" onclick="createPurchaseOrder('critical')">
                                    üìã –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É
                                </button>
                                <button class="btn btn-warning" onclick="showCriticalProducts()">
                                    üìä –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
                                </button>
                            </div>
                        </div>
                        
                        <div class="action-card important">
                            <div class="action-title">üí∞ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫—Ü–∏–∏</div>
                            <div class="action-description">
                                \${data.overstock_count} —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–±—ã—Ç–∫–æ–º. –ú–æ–∂–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å 
                                \${(data.overstock_value / 1000000).toFixed(1)}–ú ‚ÇΩ –æ–±–æ—Ä–æ—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.
                            </div>
                            <div class="action-buttons">
                                <button class="btn btn-success" onclick="createPromotion()">
                                    üéâ –°–æ–∑–¥–∞—Ç—å –∞–∫—Ü–∏—é
                                </button>
                                <button class="btn btn-primary" onclick="exportOverstockReport()">
                                    üìÑ –≠–∫—Å–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞
                                </button>
                            </div>
                        </div>
                        
                        <div class="action-card normal">
                            <div class="action-title">üìà –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫—É–ø–æ–∫</div>
                            <div class="action-description">
                                \${data.low_stock_count} —Ç–æ–≤–∞—Ä–æ–≤ —Ç—Ä–µ–±—É—é—Ç –ø–ª–∞–Ω–æ–≤–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –Ω–µ–¥–µ–ª—å.
                            </div>
                            <div class="action-buttons">
                                <button class="btn btn-primary" onclick="planPurchases()">
                                    üìÖ –ü–ª–∞–Ω –∑–∞–∫—É–ø–æ–∫
                                </button>
                                <button class="btn btn-primary" onclick="forecastDemand()">
                                    üìä –ü—Ä–æ–≥–Ω–æ–∑ —Å–ø—Ä–æ—Å–∞
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            \`;
        }
        
        function generateMockInventoryData() {
            return {
                critical_stock_count: 12,
                low_stock_count: 28,
                overstock_count: 15,
                total_inventory_value: 8500000,
                potential_lost_sales: 45000,
                overstock_value: 2100000,
                critical_products: [
                    {
                        name: "–ü–æ–¥—à–∏–ø–Ω–∏–∫ 6205-2RS",
                        sku: "BRG-6205-2RS",
                        stock: 3,
                        daily_sales: 2,
                        days_left: 1
                    },
                    {
                        name: "–°–∞–ª—å–Ω–∏–∫ 40x62x10",
                        sku: "SEAL-40-62-10",
                        stock: 5,
                        daily_sales: 3,
                        days_left: 2
                    },
                    {
                        name: "–ü—Ä–æ–∫–ª–∞–¥–∫–∞ –≥–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫–∞",
                        sku: "GSKT-HEAD-001",
                        stock: 2,
                        daily_sales: 1,
                        days_left: 2
                    }
                ],
                low_stock_products: [
                    {
                        name: "–§–∏–ª—å—Ç—Ä –º–∞—Å–ª—è–Ω—ã–π W712/75",
                        sku: "FILT-OIL-W712",
                        stock: 15,
                        daily_sales: 2,
                        days_left: 7
                    },
                    {
                        name: "–°–≤–µ—á–∞ –∑–∞–∂–∏–≥–∞–Ω–∏—è NGK BPR6ES",
                        sku: "SPARK-NGK-BPR6",
                        stock: 25,
                        daily_sales: 3,
                        days_left: 8
                    },
                    {
                        name: "–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ –ø–µ—Ä–µ–¥–Ω–∏–µ",
                        sku: "BRAKE-PAD-F001",
                        stock: 8,
                        daily_sales: 1,
                        days_left: 8
                    }
                ],
                overstock_products: [
                    {
                        name: "–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –∑–∞–¥–Ω–∏–π Monroe",
                        sku: "SHOCK-MONROE-R",
                        stock: 150,
                        daily_sales: 1,
                        days_left: 150
                    },
                    {
                        name: "–†–∞–¥–∏–∞—Ç–æ—Ä –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è",
                        sku: "RAD-COOL-001",
                        stock: 45,
                        daily_sales: 0.3,
                        days_left: 150
                    },
                    {
                        name: "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä 14V 90A",
                        sku: "ALT-14V-90A",
                        stock: 25,
                        daily_sales: 0.2,
                        days_left: 125
                    }
                ]
            };
        }
        
        // –§—É–Ω–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π
        function createPurchaseOrder(type) {
            alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
        }
        
        function showCriticalProducts() {
            alert('–û—Ç–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤');
        }
        
        function createPromotion() {
            alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫—Ü–∏–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
        }
        
        function exportOverstockReport() {
            alert('–≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞ –ø–æ –∏–∑–±—ã—Ç–∫–∞–º –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
        }
        
        function planPurchases() {
            alert('–§—É–Ω–∫—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫—É–ø–æ–∫ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
        }
        
        function forecastDemand() {
            alert('–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø—Ä–æ—Å–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        loadDashboard();
        
        // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        setInterval(loadDashboard, 300000);
    </script>
</body>
</html>