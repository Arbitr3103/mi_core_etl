<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û—Ç—á–µ—Ç—ã –æ –∫–∞—á–µ—Å—Ç–≤–µ –¥–∞–Ω–Ω—ã—Ö - MDM System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: #f5f7fa;
            color: #2c3e50;
            line-height: 1.6;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        h1 {
            color: #2c3e50;
            margin-bottom: 10px;
        }
        
        .subtitle {
            color: #7f8c8d;
            font-size: 14px;
        }
        
        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .card-title {
            font-size: 14px;
            color: #7f8c8d;
            margin-bottom: 10px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .card-value {
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .card-subtitle {
            font-size: 12px;
            color: #95a5a6;
        }
        
        .card.danger .card-value { color: #e74c3c; }
        .card.warning .card-value { color: #f39c12; }
        .card.success .card-value { color: #27ae60; }
        .card.info .card-value { color: #3498db; }
        
        .tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            border-bottom: 2px solid #ecf0f1;
        }
        
        .tab {
            padding: 12px 24px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 14px;
            color: #7f8c8d;
            border-bottom: 2px solid transparent;
            margin-bottom: -2px;
            transition: all 0.3s;
        }
        
        .tab:hover {
            color: #2c3e50;
        }
        
        .tab.active {
            color: #3498db;
            border-bottom-color: #3498db;
        }
        
        .report-section {
            display: none;
        }
        
        .report-section.active {
            display: block;
        }
        
        .report-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .report-title {
            font-size: 20px;
            font-weight: 600;
        }
        
        .export-buttons {
            display: flex;
            gap: 10px;
        }
        
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
        }
        
        .btn-primary {
            background: #3498db;
            color: white;
        }
        
        .btn-primary:hover {
            background: #2980b9;
        }
        
        .btn-success {
            background: #27ae60;
            color: white;
        }
        
        .btn-success:hover {
            background: #229954;
        }
        
        table {
            width: 100%;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        thead {
            background: #34495e;
            color: white;
        }
        
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ecf0f1;
        }
        
        th {
            font-weight: 600;
            font-size: 13px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        tbody tr:hover {
            background: #f8f9fa;
        }
        
        .badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .badge-danger { background: #fee; color: #e74c3c; }
        .badge-warning { background: #fef5e7; color: #f39c12; }
        .badge-success { background: #eafaf1; color: #27ae60; }
        .badge-info { background: #ebf5fb; color: #3498db; }
        
        .priority-high { color: #e74c3c; font-weight: bold; }
        .priority-medium { color: #f39c12; }
        .priority-low { color: #95a5a6; }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
        }
        
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #3498db;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
        }
        
        .pagination button {
            padding: 8px 16px;
            border: 1px solid #ddd;
            background: white;
            cursor: pointer;
            border-radius: 4px;
        }
        
        .pagination button:hover:not(:disabled) {
            background: #f8f9fa;
        }
        
        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #7f8c8d;
        }
        
        .empty-state-icon {
            font-size: 48px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üìä –û—Ç—á–µ—Ç—ã –æ –∫–∞—á–µ—Å—Ç–≤–µ –¥–∞–Ω–Ω—ã—Ö</h1>
            <p class="subtitle">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–æ–≤</p>
        </header>
        
        <div class="summary-cards" id="summaryCards">
            <div class="card info">
                <div class="card-title">–û–±—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –¥–∞–Ω–Ω—ã—Ö</div>
                <div class="card-value" id="healthScore">-</div>
                <div class="card-subtitle">–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞</div>
            </div>
            
            <div class="card danger">
                <div class="card-title">–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è</div>
                <div class="card-value" id="missingNames">-</div>
                <div class="card-subtitle" id="missingNamesPercent">-</div>
            </div>
            
            <div class="card warning">
                <div class="card-title">–û—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</div>
                <div class="card-value" id="syncErrors">-</div>
                <div class="card-subtitle" id="syncErrorsPercent">-</div>
            </div>
            
            <div class="card success">
                <div class="card-title">–¢—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</div>
                <div class="card-value" id="manualReview">-</div>
                <div class="card-subtitle" id="manualReviewPercent">-</div>
            </div>
        </div>
        
        <div class="tabs">
            <button class="tab active" onclick="switchTab('missing_names')">–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è</button>
            <button class="tab" onclick="switchTab('sync_errors')">–û—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</button>
            <button class="tab" onclick="switchTab('manual_review')">–¢—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</button>
        </div>
        
        <!-- Missing Names Report -->
        <div id="missing_names" class="report-section active">
            <div class="report-header">
                <h2 class="report-title">–¢–æ–≤–∞—Ä—ã —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏</h2>
                <div class="export-buttons">
                    <button class="btn btn-success" onclick="exportReport('missing_names', 'csv')">üì• –≠–∫—Å–ø–æ—Ä—Ç CSV</button>
                    <button class="btn btn-primary" onclick="exportReport('missing_names', 'json')">üì• –≠–∫—Å–ø–æ—Ä—Ç JSON</button>
                </div>
            </div>
            <div id="missingNamesTable"></div>
        </div>
        
        <!-- Sync Errors Report -->
        <div id="sync_errors" class="report-section">
            <div class="report-header">
                <h2 class="report-title">–¢–æ–≤–∞—Ä—ã —Å –æ—à–∏–±–∫–∞–º–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</h2>
                <div class="export-buttons">
                    <button class="btn btn-success" onclick="exportReport('sync_errors', 'csv')">üì• –≠–∫—Å–ø–æ—Ä—Ç CSV</button>
                    <button class="btn btn-primary" onclick="exportReport('sync_errors', 'json')">üì• –≠–∫—Å–ø–æ—Ä—Ç JSON</button>
                </div>
            </div>
            <div id="syncErrorsTable"></div>
        </div>
        
        <!-- Manual Review Report -->
        <div id="manual_review" class="report-section">
            <div class="report-header">
                <h2 class="report-title">–¢–æ–≤–∞—Ä—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏</h2>
                <div class="export-buttons">
                    <button class="btn btn-success" onclick="exportReport('manual_review', 'csv')">üì• –≠–∫—Å–ø–æ—Ä—Ç CSV</button>
                    <button class="btn btn-primary" onclick="exportReport('manual_review', 'json')">üì• –≠–∫—Å–ø–æ—Ä—Ç JSON</button>
                </div>
            </div>
            <div id="manualReviewTable"></div>
        </div>
    </div>
    
    <script>
        let currentTab = 'missing_names';
        let currentPage = {
            missing_names: 0,
            sync_errors: 0,
            manual_review: 0
        };
        const pageSize = 50;
        
        // Load summary on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadSummary();
            loadReport('missing_names');
        });
        
        function switchTab(tabName) {
            // Update tab buttons
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            event.target.classList.add('active');
            
            // Update sections
            document.querySelectorAll('.report-section').forEach(section => section.classList.remove('active'));
            document.getElementById(tabName).classList.add('active');
            
            currentTab = tabName;
            
            // Load report if not already loaded
            loadReport(tabName);
        }
        
        async function loadSummary() {
            try {
                const response = await fetch('/api/data-quality-reports.php?action=summary');
                const result = await response.json();
                
                if (result.success) {
                    const data = result.data;
                    document.getElementById('healthScore').textContent = data.health_score + '%';
                    document.getElementById('missingNames').textContent = data.missing_names;
                    document.getElementById('missingNamesPercent').textContent = data.missing_names_percent + '% –æ—Ç –æ–±—â–µ–≥–æ';
                    document.getElementById('syncErrors').textContent = data.sync_errors;
                    document.getElementById('syncErrorsPercent').textContent = data.sync_errors_percent + '% –æ—Ç –æ–±—â–µ–≥–æ';
                    document.getElementById('manualReview').textContent = data.manual_review;
                    document.getElementById('manualReviewPercent').textContent = data.manual_review_percent + '% –æ—Ç –æ–±—â–µ–≥–æ';
                }
            } catch (error) {
                console.error('Error loading summary:', error);
            }
        }
        
        async function loadReport(reportType, page = 0) {
            const tableId = reportType === 'missing_names' ? 'missingNamesTable' :
                           reportType === 'sync_errors' ? 'syncErrorsTable' : 'manualReviewTable';
            
            const tableContainer = document.getElementById(tableId);
            tableContainer.innerHTML = '<div class="loading"><div class="spinner"></div>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>';
            
            try {
                const offset = page * pageSize;
                const response = await fetch(`/api/data-quality-reports.php?action=${reportType}&limit=${pageSize}&offset=${offset}`);
                const result = await response.json();
                
                if (result.success && result.data.products.length > 0) {
                    renderTable(result.data, reportType, tableId);
                } else {
                    tableContainer.innerHTML = `
                        <div class="empty-state">
                            <div class="empty-state-icon">‚úÖ</div>
                            <h3>–ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                            <p>–í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –ø–æ—Ä—è–¥–∫–µ</p>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error loading report:', error);
                tableContainer.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-state-icon">‚ùå</div>
                        <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
                        <p>${error.message}</p>
                    </div>
                `;
            }
        }
        
        function renderTable(data, reportType, tableId) {
            const products = data.products;
            const total = data.total;
            const currentOffset = data.offset;
            
            let html = '<table><thead><tr>';
            
            // Table headers based on report type
            if (reportType === 'missing_names') {
                html += '<th>ID</th><th>Inventory ID</th><th>Ozon ID</th><th>–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</th><th>–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã</th><th>–û—Å—Ç–∞—Ç–æ–∫</th><th>–°–∫–ª–∞–¥</th><th>–°—Ç–∞—Ç—É—Å</th>';
            } else if (reportType === 'sync_errors') {
                html += '<th>ID</th><th>Inventory ID</th><th>Ozon ID</th><th>–ù–∞–∑–≤–∞–Ω–∏–µ</th><th>–¢–∏–ø –æ—à–∏–±–∫–∏</th><th>–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</th><th>–ß–∞—Å–æ–≤ –Ω–∞–∑–∞–¥</th><th>–°—Ç–∞—Ç—É—Å</th>';
            } else {
                html += '<th>ID</th><th>Inventory ID</th><th>Ozon ID</th><th>–ù–∞–∑–≤–∞–Ω–∏–µ</th><th>–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏</th><th>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</th><th>–û—Å—Ç–∞—Ç–æ–∫</th><th>–°—Ç–∞—Ç—É—Å</th>';
            }
            
            html += '</tr></thead><tbody>';
            
            products.forEach(product => {
                html += '<tr>';
                
                if (reportType === 'missing_names') {
                    html += `
                        <td>${product.id}</td>
                        <td>${product.inventory_product_id || '-'}</td>
                        <td>${product.ozon_product_id || '-'}</td>
                        <td>${product.dim_product_name || product.cached_name || '-'}</td>
                        <td><span class="badge badge-danger">${formatIssueType(product.issue_type)}</span></td>
                        <td>${product.quantity_present || 0}</td>
                        <td>${product.warehouse_name || '-'}</td>
                        <td><span class="badge badge-${getSyncStatusClass(product.sync_status)}">${product.sync_status}</span></td>
                    `;
                } else if (reportType === 'sync_errors') {
                    html += `
                        <td>${product.id}</td>
                        <td>${product.inventory_product_id || '-'}</td>
                        <td>${product.ozon_product_id || '-'}</td>
                        <td>${product.dim_product_name || product.cached_name || '-'}</td>
                        <td><span class="badge badge-warning">${formatErrorType(product.error_type)}</span></td>
                        <td>${product.last_api_sync || '–ù–∏–∫–æ–≥–¥–∞'}</td>
                        <td>${product.hours_since_sync || '-'}</td>
                        <td><span class="badge badge-${getSyncStatusClass(product.sync_status)}">${product.sync_status}</span></td>
                    `;
                } else {
                    html += `
                        <td>${product.id}</td>
                        <td>${product.inventory_product_id || '-'}</td>
                        <td>${product.ozon_product_id || '-'}</td>
                        <td>${product.dim_product_name || product.cached_name || '-'}</td>
                        <td><span class="badge badge-info">${formatReviewReason(product.review_reason)}</span></td>
                        <td><span class="priority-${product.priority}">${product.priority.toUpperCase()}</span></td>
                        <td>${product.quantity_present || 0}</td>
                        <td><span class="badge badge-${getSyncStatusClass(product.sync_status)}">${product.sync_status}</span></td>
                    `;
                }
                
                html += '</tr>';
            });
            
            html += '</tbody></table>';
            
            // Add pagination
            const currentPageNum = Math.floor(currentOffset / pageSize);
            const totalPages = Math.ceil(total / pageSize);
            
            html += '<div class="pagination">';
            html += `<button onclick="loadReport('${reportType}', ${currentPageNum - 1})" ${currentPageNum === 0 ? 'disabled' : ''}>‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è</button>`;
            html += `<span>–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${currentPageNum + 1} –∏–∑ ${totalPages} (–í—Å–µ–≥–æ: ${total})</span>`;
            html += `<button onclick="loadReport('${reportType}', ${currentPageNum + 1})" ${currentPageNum >= totalPages - 1 ? 'disabled' : ''}>–°–ª–µ–¥—É—é—â–∞—è ‚Üí</button>`;
            html += '</div>';
            
            document.getElementById(tableId).innerHTML = html;
        }
        
        function formatIssueType(type) {
            const types = {
                'completely_missing': '–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
                'placeholder_name': '–ó–∞–≥–ª—É—à–∫–∞',
                'needs_update': '–¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
                'unknown_issue': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞'
            };
            return types[type] || type;
        }
        
        function formatErrorType(type) {
            const types = {
                'sync_failed': '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏',
                'never_synced': '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è',
                'stale_data': '–£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ',
                'unknown': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
            };
            return types[type] || type;
        }
        
        function formatReviewReason(reason) {
            const reasons = {
                'missing_ozon_id': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Ozon ID',
                'missing_inventory_id': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Inventory ID',
                'no_name_data': '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–∑–≤–∞–Ω–∏–∏',
                'repeated_failures': '–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –æ—à–∏–±–∫–∏',
                'high_stock_no_name': '–ë–æ–ª—å—à–æ–π –æ—Å—Ç–∞—Ç–æ–∫ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
                'data_inconsistency': '–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö'
            };
            return reasons[reason] || reason;
        }
        
        function getSyncStatusClass(status) {
            const classes = {
                'synced': 'success',
                'pending': 'warning',
                'failed': 'danger'
            };
            return classes[status] || 'info';
        }
        
        async function exportReport(reportType, format) {
            try {
                const url = `/api/data-quality-reports.php?action=export&type=${reportType}&format=${format}`;
                
                if (format === 'csv') {
                    // Download CSV file
                    window.location.href = url;
                } else {
                    // Download JSON
                    const response = await fetch(url);
                    const result = await response.json();
                    
                    if (result.success) {
                        const dataStr = JSON.stringify(result.data, null, 2);
                        const dataBlob = new Blob([dataStr], {type: 'application/json'});
                        const url = URL.createObjectURL(dataBlob);
                        const link = document.createElement('a');
                        link.href = url;
                        link.download = `data_quality_report_${reportType}_${new Date().toISOString().split('T')[0]}.json`;
                        link.click();
                    }
                }
            } catch (error) {
                console.error('Error exporting report:', error);
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –æ—Ç—á–µ—Ç–∞: ' + error.message);
            }
        }
        
        // Auto-refresh summary every 30 seconds
        setInterval(loadSummary, 30000);
    </script>
</body>
</html>
