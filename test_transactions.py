#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–≠—Ç–∞–ø 4).
"""

import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é importers
sys.path.append(os.path.join(os.path.dirname(__file__), 'importers'))

from ozon_importer import (
    get_transactions_from_api, 
    transform_transaction_data, 
    load_transactions_to_db, 
    connect_to_db
)

def test_4_1_transactions():
    """–¢–µ—Å—Ç 4.1: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    print("=== –¢–µ—Å—Ç 4.1: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ===")
    
    yesterday = (datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d')
    
    try:
        print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ {yesterday}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ API
        transactions = get_transactions_from_api(yesterday, yesterday)
        
        if not transactions:
            print("‚ùå –ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
            return False
        
        # –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        transformed_transactions = [transform_transaction_data(transaction) for transaction in transactions]
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        load_transactions_to_db(transformed_transactions)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        connection = connect_to_db()
        with connection.cursor(dictionary=True) as cursor:
            cursor.execute(
                """
                SELECT transaction_type, SUM(amount) as total_amount, COUNT(*) as count 
                FROM fact_transactions 
                WHERE transaction_date = %s 
                GROUP BY transaction_type
                ORDER BY total_amount DESC
                """,
                (yesterday,)
            )
            results = cursor.fetchall()
            
            print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ {yesterday}:")
            print("–¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ | –°—É–º–º–∞ | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
            print("-" * 50)
            
            for result in results:
                print(f"{result['transaction_type'][:30]} | {result['total_amount']:10.2f} | {result['count']:5d}")
            
            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            cursor.execute(
                "SELECT COUNT(*) as total_count, SUM(amount) as total_amount FROM fact_transactions WHERE transaction_date = %s",
                (yesterday,)
            )
            total_result = cursor.fetchone()
            
            print(f"\n–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {total_result['total_count']}")
            print(f"–û–±—â–∞—è —Å—É–º–º–∞: {total_result['total_amount']:.2f}")
        
        connection.close()
        
        print("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å—É–º–º—ã –≤—ã–≥–ª—è–¥—è—Ç –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {e}")
        return False

def test_transaction_transformation():
    """–¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏."""
    print("\n=== –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ===")
    
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    sample_transaction = {
        "operation_id": "test_123",
        "operation_type": "OperationMarketplaceServiceItemFulfillment",
        "operation_type_name": "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
        "operation_date": "2024-01-15T10:30:00.000Z",
        "amount": 150.50,
        "posting": {
            "posting_number": "ORDER_123"
        }
    }
    
    try:
        transformed = transform_transaction_data(sample_transaction)
        
        print("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print(f"  ID: {sample_transaction['operation_id']}")
        print(f"  –¢–∏–ø: {sample_transaction['operation_type']}")
        print(f"  –°—É–º–º–∞: {sample_transaction['amount']}")
        
        print("\n–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print(f"  ID: {transformed['transaction_id']}")
        print(f"  –¢–∏–ø: {transformed['transaction_type']}")
        print(f"  –°—É–º–º–∞: {transformed['amount']}")
        print(f"  –î–∞—Ç–∞: {transformed['transaction_date']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞—Å—Ö–æ–¥–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å—Ç–∞–ª–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π
        if transformed['amount'] < 0:
            print("‚úÖ –†–∞—Å—Ö–æ–¥–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É")
        else:
            print("‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –≤ —Ä–∞—Å—Ö–æ–¥–Ω—É—é")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {e}")
        return False

def run_all_transaction_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π."""
    print("üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n")
    
    # –¢–µ—Å—Ç —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
    transform_success = test_transaction_transformation()
    
    # –¢–µ—Å—Ç 4.1
    load_success = test_4_1_transactions()
    
    if transform_success and load_success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")

if __name__ == "__main__":
    run_all_transaction_tests()
